{"version":3,"sources":["constants.js","index.js"],"names":["data","datasets","spanGaps","showLine","label","yAxisID","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","animation","duration","scales","xAxes","gridLines","display","type","distribution","scaleLabel","labelString","yAxes","id","position","request","state","current","query","filter","compositeFilter","filters","propertyFilter","op","property","name","value","stringValue","startTime","toISOString","kind","projection","endTime","shortcuts","Today","moment","Yesterday","subtract","GraphContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeStart","time","setState","handleChangeEnd","handleCurrent","e","target","checked","intervalHandler","clearTimeout","timeout","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","getData","console","log","setTimeout","stop","getDataHandler","_ref2","_callee2","mode","req","_context2","lastCursor","startCursor","fetch","method","headers","Authorization","token","Accept","Content-Type","body","JSON","stringify","then","val","json","batch","vals","slice","entityResults","forEach","d","elem","y","parseFloat","entity","properties","x","published_at","length","unix","push","NaN","NMEASeq","split","lat","parseInt","lng","moreResults","endCursor","error","_x","_x2","apply","arguments","_callee3","newData","_context3","updating","toConsumableArray","graph","chartRef","_meta","hidden","coordinates","responseGoogle","response","loggedIn","accessToken","responseFail","buttonProvider","react_default","createElement","className","onClick","disabled","infoHide","infoOn","getChartRef","ref","header","undefined","src_DayRange","startVal","endVal","onChangeStart","onChangeEnd","component_default","defaultChecked","onChange","src_Graph","src_Map","google_login_default","clientId","buttonText","onSuccess","onFailure","React","Component","Graph","shouldComponentUpdate","nextProps","_this2","render","es","options","Map","_this3","initMap","map","window","google","maps","document","getElementById","center","zoom","loaded","drawLineOnMap","panTo","LatLng","Math","floor","lines","Polyline","path","setMap","setPath","componentWillMount","tag","async","src","appendChild","DayRange","rc_datetime_picker_cjs","format","readOnly","ReactDOM","src_GraphContainer"],"mappings":"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","file":"static/js/main.47916057.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nexport const data = {\r\n    datasets: [\r\n        {\r\n            spanGaps: false,\r\n            showLine: true,\r\n            label: 'Velocity',\r\n            yAxisID: 'Velocity',\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [] // Data to update\r\n        },\r\n        {\r\n            spanGaps: false,\r\n            showLine: true,\r\n            label: 'Power',\r\n            yAxisID: 'Power',\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(192,86,75,0.4)',\r\n            borderColor: 'rgba(192,86,75,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(192,86,75,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(192,86,75,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [] // Data to update\r\n        }\r\n    ],\r\n};\r\n\r\nexport const chartOptions = {\r\n    animation: {\r\n      duration : 500,\r\n    },\r\n    scales : {\r\n      xAxes: [{\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        type: 'time',\r\n        distribution: 'linear', // Distances can vary, based on time\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Time'\r\n        },\r\n      }],\r\n      yAxes: [{\r\n        id: 'Velocity',\r\n        position: 'left',\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Velocity'\r\n        },\r\n        },\r\n        {\r\n          id: 'Power',\r\n          position: 'right',\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Power'\r\n          },\r\n        }\r\n    ]\r\n    },\r\n}\r\n  \r\nexport const request = (state, type) => {\r\nreturn (state.current) ? {\r\n    query: {\r\n        filter: {\r\n            compositeFilter: {\r\n                filters: [\r\n                {\r\n                    propertyFilter: {\r\n                        op: 'GREATER_THAN_OR_EQUAL',\r\n                        property: {\r\n                            name: 'published_at'\r\n                        },\r\n                        value: {\r\n                            stringValue: state.startTime.toISOString()\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    propertyFilter: {\r\n                        op: 'EQUAL',\r\n                        property: {\r\n                            name: 'event'\r\n                        },\r\n                        value: {\r\n                            stringValue: type\r\n                        }\r\n                    }\r\n                }\r\n                ],\r\n                op: \"AND\"\r\n            }\r\n        },\r\n        kind: [\r\n            {\r\n                name: 'ParticleEvent'\r\n            }\r\n        ],\r\n        projection: [\r\n            {\r\n                property: {\r\n                    name: 'data'\r\n                }\r\n            },\r\n            {\r\n                property: {\r\n                    name: 'published_at'\r\n                }\r\n            }\r\n        ],\r\n    }\r\n    } : {\r\n    query: {\r\n        filter: {\r\n            compositeFilter: {\r\n                filters: [\r\n                {\r\n                    propertyFilter: {\r\n                        op: 'GREATER_THAN_OR_EQUAL',\r\n                        property: {\r\n                            name: 'published_at'\r\n                        },\r\n                        value: {\r\n                            stringValue: state.startTime.toISOString()\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    propertyFilter: {\r\n                        op: 'LESS_THAN_OR_EQUAL',\r\n                        property: {\r\n                            name: 'published_at'\r\n                        },\r\n                        value: {\r\n                            stringValue: state.endTime.toISOString()\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    propertyFilter: {\r\n                        op: 'EQUAL',\r\n                        property: {\r\n                            name: 'event'\r\n                        },\r\n                        value: {\r\n                            stringValue: type\r\n                        }\r\n                    }\r\n                }\r\n                ],\r\n                op: \"AND\"\r\n            }\r\n        }\r\n        ,\r\n        kind: [\r\n        {\r\n            name: \"ParticleEvent\"\r\n        }\r\n        ],\r\n        projection: [\r\n        {\r\n            property: {\r\n            name: \"data\"\r\n            }\r\n        },\r\n        {\r\n            property: {\r\n            name: \"published_at\"\r\n            }\r\n        }\r\n        ]\r\n    }\r\n}\r\n};\r\n\r\nexport const shortcuts = {\r\n    'Today': moment(),\r\n    'Yesterday': moment().subtract(1, 'days'),\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Scatter} from 'react-chartjs-2';\r\nimport moment from 'moment';\r\nimport {DatetimePickerTrigger} from 'rc-datetime-picker';\r\nimport Toggle from 'react-toggle';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {data, chartOptions, request, shortcuts} from './constants.js';\r\nimport './datetime.css';\r\nimport './toggle.css';\r\nimport './index.css';\r\nimport 'bulma/css/bulma.css';\r\n\r\n// Our graph container to hold all our objects, and also\r\n// to store state of our objects\r\nclass GraphContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.lastCursor = null;\r\n    this.vals = [];\r\n    this.chartRef = null;\r\n    this.state = {\r\n      startTime: moment(),\r\n      endTime: moment(),\r\n      current: false,\r\n      loggedIn: false,\r\n      graph: data,\r\n      updating: false,\r\n      infoOn: true,\r\n      coordinates: []\r\n    }\r\n  }\r\n\r\n  // Handle the start time change\r\n  handleChangeStart = (time) => {\r\n    this.setState({\r\n      startTime: time\r\n    })\r\n  }\r\n\r\n  // Handle the end time change\r\n  handleChangeEnd = (time) => {\r\n    this.setState({\r\n      endTime: time\r\n    })\r\n  }\r\n\r\n  // Handle the current boolean for \"live\" plotting\r\n  handleCurrent = (e) => {\r\n    let current = e.target.checked;\r\n    if (current) {\r\n      this.setState({\r\n        current: true,\r\n        endTime: null\r\n      })\r\n      this.intervalHandler();\r\n    } else {\r\n      clearTimeout(this.timeout);\r\n      this.setState({\r\n        current: false\r\n      })\r\n      this.handleChangeEnd(moment());\r\n    }\r\n  }\r\n\r\n  intervalHandler = async () => {\r\n    await this.getData();\r\n    console.log(\"get data done, resetting\");\r\n    if (this.state.current) {\r\n      this.timeout = setTimeout(this.intervalHandler, 2000);\r\n    }\r\n  }\r\n\r\n  // POST using OAuth creds to retrieve datastore based on time\r\n  // Async means it returns an implicit Promise that we will resolve later\r\n  getDataHandler = async (type, mode) => {\r\n    // Build our query\r\n    let req = request(this.state, type);\r\n\r\n    // Change our lastCursor value\r\n    if (this.lastCursor !== null) req.query.startCursor = this.lastCursor;\r\n    // Call our fetch\r\n    await fetch('https://datastore.googleapis.com/v1/projects/ubc-supermileage-telemetry-v2:runQuery?prettyPrint=true&alt=json', \r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization' : 'Bearer ' + this.token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(req)}).then(val => val.json().then(e => {\r\n        // Try safety\r\n        console.log(e);\r\n        try {\r\n          if ('entityResults' in e.batch) {\r\n            console.log()\r\n            if (this.lastCursor === null) {\r\n              this.vals = [];\r\n            } else {\r\n              this.vals = this.vals.slice(); // Return a copy\r\n            }\r\n            e.batch.entityResults.forEach(d => {\r\n              // For a coordinate\r\n              if (mode === 0) {\r\n                let elem = {};\r\n                elem.y = parseFloat(d.entity.properties.data.stringValue);\r\n                elem.x = moment(d.entity.properties.published_at.stringValue);\r\n                // Check if the last element was greater than 10 minutes ago\r\n                if (this.vals.length > 0 && elem.x.unix() - moment(this.vals[this.vals.length - 1].x).unix() > 600) {\r\n                  this.vals.push({\r\n                    y: NaN,\r\n                    x: elem.x\r\n                  });\r\n                }\r\n                this.vals.push(elem);\r\n              } else {\r\n                // Convert to lat/long here\r\n                // Sample NMEA seq \"$GPRMC,033404.000,A,4915.6993,N,12314.9440,W,0.45,107.40,060319,,,A*72\", \r\n                let NMEASeq = d.entity.properties.data.stringValue.split(',');\r\n                let lat = parseInt(parseInt(NMEASeq[3]) / 100) + parseFloat(parseFloat(NMEASeq[3]) % 100) / 60;\r\n                let lng = parseInt(parseInt(NMEASeq[5]) / 100) + parseFloat(parseFloat(NMEASeq[5]) % 100) / 60;\r\n                lat = (NMEASeq[4] === \"S\") ? -lat : lat;\r\n                lng = (NMEASeq[6] === \"W\") ? -lng : lng;\r\n                let elem = {};\r\n                elem.lat = lat;\r\n                elem.lng = lng;\r\n                this.vals.push(elem);\r\n              }\r\n            });\r\n          } else {\r\n            // Clear our values\r\n            this.vals = [];\r\n          }\r\n          if (e.batch.moreResults === \"NOT_FINISHED\") {\r\n            console.log(\"Not done\");\r\n            this.lastCursor = e.batch.endCursor;\r\n            return this.getDataHandler(type, mode);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        console.log(\"Done\");\r\n        this.lastCursor = null;\r\n        return true;\r\n      }));\r\n  }\r\n\r\n  // Handler for our data, which sets up a promise \r\n  // that updates once our data has been set up\r\n  getData = async () => {\r\n    this.setState({\r\n      updating: true // Set updating to true so we render notice\r\n    });\r\n    let newData = [\r\n      ...this.state.graph.datasets, // Spread operator allows us to copy things\r\n    ];\r\n    // Get velocity\r\n    if (this.chartRef !== null && this.chartRef.props.data.datasets[0]._meta[0].hidden !== true) {\r\n      await this.getDataHandler('Velocity', 0);\r\n      newData[0].data = this.vals;\r\n    }\r\n    // Get power\r\n    if (this.chartRef !== null && this.chartRef.props.data.datasets[1]._meta[0].hidden !== true) {\r\n      await this.getDataHandler('Power', 0);\r\n      newData[1].data = this.vals;\r\n    }\r\n    // Get location\r\n    await this.getDataHandler('Location', 1);\r\n    // Parse location here\r\n    console.log(this.vals);\r\n    this.setState({\r\n      graph: {\r\n        datasets: newData\r\n      },\r\n      coordinates: this.vals.slice(),\r\n      updating: false // done updating\r\n    });\r\n  }\r\n\r\n  // OAuth authorized, do stuff\r\n  responseGoogle = (response) => {\r\n    this.setState({\r\n      loggedIn: true\r\n    });\r\n    console.log(response);\r\n    console.log(\"Success\");\r\n    this.token = response.accessToken;\r\n  }\r\n\r\n  // OAuth failed, don't do stuff\r\n  responseFail = (response) => {\r\n    console.log(response);\r\n    console.log(\"Failed\");\r\n  }\r\n\r\n  // This code sucks\r\n  buttonProvider = () => {\r\n    return (this.state.current) ? (<button \r\n      className=\"button is-rounded is-info is-small is-loading\" \r\n      onClick={this.getData} \r\n      disabled\r\n    >Update</button>) : (this.state.updating) ? (<button \r\n      className=\"button is-rounded is-info is-small is-loading\" \r\n      onClick={this.getData}\r\n      disabled\r\n    >Update</button>) : (<button \r\n      className=\"button is-rounded is-info is-small\" \r\n      onClick={this.getData} \r\n    >Update</button>);\r\n  }\r\n\r\n  infoHide = () => {\r\n    this.setState({\r\n      infoOn: false\r\n    });\r\n  }\r\n\r\n  getChartRef = (ref) => {\r\n    // Get reference to the chart \r\n    if (this.chartRef === null && ref !== null) {\r\n      this.chartRef = ref;\r\n    }\r\n  }\r\n\r\n  // Render element based on logged in state\r\n  render() {\r\n    const header = (<div className=\"container\"><div className=\"notification is-info\">Welcome! If it's your first time here,\r\n    the toggle sets whether the data is updated live. Otherwise, you can grab specific data by selecting \r\n    your time range, then pressing \"Update\". You may encounter errors if you're not authorized to access the \r\n    datastore. You can close this message on the top right.\r\n    <button onClick={this.infoHide} className=\"delete\"></button>\r\n    </div></div>);\r\n    if (!this.state.loggedIn) {\r\n      return (<div>\r\n      <div className=\"container notification is-link floater\">To get started, log in to generate an OAuth token.</div>\r\n      <div className=\"login\">\r\n        <GoogleLogin\r\n          clientId = \"617338661646-v92ol8vhd4nl44vpntkv4jpjbq5hahmo.apps.googleusercontent.com\"\r\n          buttonText = \"Login\"\r\n          onSuccess = {this.responseGoogle}\r\n          onFailure = {this.responseFail} \r\n        /></div></div>);\r\n    } else {\r\n      return (<div>\r\n      {(this.state.infoOn) ? header : undefined}\r\n      <div className=\"container notification\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-narrow\">\r\n            <DayRange\r\n              startVal = {this.state.startTime}\r\n              endVal = {this.state.endTime}\r\n              onChangeStart = {this.handleChangeStart}\r\n              onChangeEnd = {this.handleChangeEnd}\r\n            />\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"columns is-mobile\">\r\n              <div className=\"toggle column is-narrow\">\r\n                <Toggle\r\n                  defaultChecked = {this.state.current}\r\n                  onChange = {this.handleCurrent}\r\n                />\r\n              </div>\r\n              <div className=\"column is-narrow\">\r\n                {this.buttonProvider()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container notification has-background-white-bis\">\r\n        <Graph\r\n          data = {this.state.graph}\r\n          chartRef = {this.getChartRef}\r\n        />\r\n      </div>\r\n      <div className=\"container notification has-background-white-bis\">\r\n          <Map\r\n            coordinates = {this.state.coordinates}\r\n          />\r\n      </div>\r\n      </div>);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Component that holds our graph object. \r\n */\r\nclass Graph extends React.Component {\r\n  // Flag to check whether the parent is grabbing values,\r\n  // if it isn't we don't update\r\n  shouldComponentUpdate = (nextProps) => {\r\n    return this.props.data !== nextProps.data;\r\n  }\r\n\r\n  render = () => {\r\n    console.log(\"Rerendering graph\");\r\n    return (<div>\r\n      <Scatter \r\n        data={this.props.data}\r\n        options={chartOptions}\r\n        ref={ref => this.props.chartRef(ref)}\r\n      />\r\n    </div>);\r\n  }\r\n}\r\n\r\n/**\r\n * Component that holds our Google map.\r\n */\r\nclass Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.lines = null;\r\n    this.state = {\r\n      map: null,\r\n      loaded: false\r\n    };\r\n  }\r\n\r\n  // Flag so that component doesn't update if we're \r\n  // currently updating the parent\r\n  shouldComponentUpdate = (nextProps) => {\r\n    return this.props.coordinates !== nextProps.coordinates;\r\n  }\r\n\r\n  initMap = () => {\r\n    let map = new window.google.maps.Map(document.getElementById('map'), {\r\n      center: {lat: 49.267941, lng: -123.247360},\r\n      zoom: 12\r\n    });\r\n    this.setState({\r\n      map: map,\r\n      loaded: true\r\n    });\r\n  }\r\n\r\n  drawLineOnMap = () => {\r\n    // If there were valid coordinates, do stuff\r\n    if (this.props.coordinates.length > 0) {\r\n      console.log(\"Drawing lines\");\r\n      // Center around first element\r\n      this.state.map.panTo(new window.google.maps.LatLng(\r\n        this.props.coordinates[Math.floor(this.props.coordinates.length / 2)].lat, \r\n        this.props.coordinates[Math.floor(this.props.coordinates.length / 2)].lng));\r\n      // If no line initialized, initialize it \r\n      if (this.lines === null) {\r\n        // Set the state\r\n        this.lines = new window.google.maps.Polyline({\r\n                    path: this.props.coordinates, // This is just an array of coordinates\r\n                    map: this.state.map\r\n                  });\r\n      } else {\r\n        this.lines.setMap(this.state.map);\r\n        this.lines.setPath(this.props.coordinates);\r\n      }\r\n    } else {\r\n      // Clear the map property from the line\r\n      if (this.lines !== null) {\r\n        this.lines.setMap(null);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Load the Google map script when this component mounts\r\n  componentWillMount = () => {\r\n    window.initMap = this.initMap;\r\n    let tag = document.createElement(\"script\");\r\n    tag.async = true;\r\n    // Loads only from specific endpoints, safe to commit\r\n    tag.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCwcnq2MMCPKEY3hQigIBJn70buQH9py3E&callback=initMap\";\r\n    // Append the script\r\n    document.body.appendChild(tag);\r\n  }\r\n\r\n  render = () => {\r\n    console.log(\"Rerendering map\");\r\n    if (this.state.loaded) {\r\n      this.drawLineOnMap();\r\n    }\r\n    return (\r\n      <div id=\"map\"></div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass DayRange extends React.Component {\r\n  // Render my pickers; all the state is lifted up into \r\n  // the parent element, thus all the changes are handled\r\n  // by props; this element does not have state\r\n  render() {\r\n    return (<div className=\"columns\">\r\n        <div className=\"column\">\r\n          <DatetimePickerTrigger\r\n            className = \"input is-rounded is-small\"\r\n            shortcuts = {shortcuts}\r\n            moment = {this.props.startVal}\r\n            onChange = {this.props.onChangeStart}>\r\n            <input type=\"text\" value={this.props.startVal.format('YYYY-MM-DD HH:mm')} readOnly />\r\n          </DatetimePickerTrigger>\r\n          </div>\r\n        <div className=\"column\">\r\n          <DatetimePickerTrigger\r\n            className = \"input is-rounded is-small\"\r\n            shortcuts = {shortcuts}\r\n            moment = {this.props.endVal}\r\n            onChange = {this.props.onChangeEnd}\r\n            disabled = {(this.props.endVal === null) ? true : false}>\r\n            <input \r\n              type = \"text\" \r\n              value = {(this.props.endVal === null) ?\r\n                \"Current\" : this.props.endVal.format('YYYY-MM-DD HH:mm')} \r\n              readOnly\r\n              disabled = {(this.props.endVal === null) ? true : false}\r\n            />\r\n          </DatetimePickerTrigger>\r\n        </div>\r\n      </div>);\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <GraphContainer />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}