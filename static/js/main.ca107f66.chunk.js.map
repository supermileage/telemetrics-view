{"version":3,"sources":["helpers/builders.js","components/Graph.js","config/datasets/Urban/Temperature.js","config/datasets/Urban/Power.js","components/MapContainer.js","config/config.js","config/datasets.js","config/datasets/Urban/Location.js","config/datasets/Proto/Speed.js","config/datasets/Proto/Location.js","components/CustomButton.js","components/DayRange.js","components/AppContainer.js","App.js","index.js"],"names":["chartBuilder","color","label","id","data","datasets","spanGaps","showLine","yAxisID","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Graph","render","props","options","React","PureComponent","handler","retval","d","retVals","entity","properties","stringValue","split","elem","y","parseFloat","x","moment","recorded_at","length","unix","push","NaN","parser","this","element","key","animation","duration","scales","xAxes","gridLines","display","type","distribution","scaleLabel","labelString","yAxes","position","MapContainer","clearFeature","feature","features","getSource","getFeatures","forEach","feat","removeFeature","formatCoordinate","coord","proj","lng","lat","componentDidMount","window","addEventListener","resizeListener","setState","height","document","getElementById","clientWidth","map","ol","view","center","config","defaults","zoom","layers","layer","source","controls","control","extend","target","loaded","bootstrapOverlay","componentWillUnmount","removeEventListener","overlay","autoPan","autoPanAnimation","state","addOverlay","on","e","hasFeatureAtPixel","pixel","getFeaturesAtPixel","get","innerHTML","format","setPosition","coordinate","undefined","centerMap","getView","setCenter","drawLineOnMap","lines","geometry","geom","name","setStyle","style","stroke","width","addLayer","drawMarkersOnMap","markers","timestamp","border","borderRadius","datastore","projectId","getQueryUrl","generatePayload","token","body","method","headers","Authorization","Accept","Urban","UrbanTemperature","UrbanPower","NMEASeq","parseInt","Proto","indexOf","oauth","clientId","refreshInterval","CustomButton","Button","variant","disabled","updating","liveMode","onClick","getDataHandler","DayRange","utils","MomentUtils","Grid","container","spacing","alignItems","justify","item","xs","sm","DateTimePicker","fullWidth","onChange","onChangeStart","value","startTime","onChangeEnd","endTime","emptyLabel","sizingIcons","1","2","3","4","AppContainer","startTimeChangeHandler","time","endTimeChangeHandler","changeSizing","max","Math","Object","keys","sizing","liveUpdateHandler","checked","intervalHandler","clearTimeout","timeout","a","updateMetrics","setTimeout","lastCursor","datasetId","req","query","filter","compositeFilter","filters","propertyFilter","op","property","toISOString","kind","projection","startCursor","fetch","JSON","stringify","response","json","batch","entityResults","moreResults","endCursor","console","log","getData","newData","car","dataset","includes","changeCar","populateCars","ret","MenuItem","modifyDatasets","slice","getCarProperties","FormControlLabel","Checkbox","Typography","classes","Container","className","ExpansionPanel","ExpansionPanelSummary","expandIcon","FormControl","stopPropagation","onFocus","InputLabel","Select","select","Tooltip","title","Switch","IconButton","ExpansionPanelDetails","index","Paper","dropdownOpen","withStyles","theme","minWidth","padding","App","oauthSuccess","loggedOn","accessToken","oauthFailure","CssBaseline","maxWidth","root","scope","buttonText","onSuccess","onFailure","paddingTop","ReactDOM"],"mappings":"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","file":"static/js/main.ca107f66.chunk.js","sourcesContent":["export const chartBuilder = (color, label, id, data) => {\r\n  return {\r\n    datasets: [\r\n      {\r\n        spanGaps: false,\r\n        showLine: true,\r\n        label: label,\r\n        yAxisID: id,\r\n        fill: true,\r\n        lineTension: 0.1,\r\n        backgroundColor: color,\r\n        borderColor: color,\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: color,\r\n        pointBackgroundColor: color,\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: color,\r\n        pointHoverBorderColor: color,\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: data\r\n      }\r\n    ]\r\n  };\r\n};\r\n\r\nexport const queryBuilder = (liveMode, startTime, endTime, id) => {\r\n  return liveMode\r\n    ? {\r\n        query: {\r\n          filter: {\r\n            compositeFilter: {\r\n              filters: [\r\n                {\r\n                  propertyFilter: {\r\n                    op: \"GREATER_THAN_OR_EQUAL\",\r\n                    property: {\r\n                      name: \"recorded_at\"\r\n                    },\r\n                    value: {\r\n                      stringValue: startTime.toISOString()\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  propertyFilter: {\r\n                    op: \"EQUAL\",\r\n                    property: {\r\n                      name: \"event\"\r\n                    },\r\n                    value: {\r\n                      stringValue: id\r\n                    }\r\n                  }\r\n                }\r\n              ],\r\n              op: \"AND\"\r\n            }\r\n          },\r\n          kind: [\r\n            {\r\n              name: \"ParticleEvent\"\r\n            }\r\n          ],\r\n          projection: [\r\n            {\r\n              property: {\r\n                name: \"data\"\r\n              }\r\n            },\r\n            {\r\n              property: {\r\n                name: \"recorded_at\"\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    : {\r\n        query: {\r\n          filter: {\r\n            compositeFilter: {\r\n              filters: [\r\n                {\r\n                  propertyFilter: {\r\n                    op: \"GREATER_THAN_OR_EQUAL\",\r\n                    property: {\r\n                      name: \"recorded_at\"\r\n                    },\r\n                    value: {\r\n                      stringValue: startTime.toISOString()\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  propertyFilter: {\r\n                    op: \"LESS_THAN_OR_EQUAL\",\r\n                    property: {\r\n                      name: \"recorded_at\"\r\n                    },\r\n                    value: {\r\n                      stringValue: endTime.toISOString()\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  propertyFilter: {\r\n                    op: \"EQUAL\",\r\n                    property: {\r\n                      name: \"event\"\r\n                    },\r\n                    value: {\r\n                      stringValue: id\r\n                    }\r\n                  }\r\n                }\r\n              ],\r\n              op: \"AND\"\r\n            }\r\n          },\r\n          kind: [\r\n            {\r\n              name: \"ParticleEvent\"\r\n            }\r\n          ],\r\n          projection: [\r\n            {\r\n              property: {\r\n                name: \"data\"\r\n              }\r\n            },\r\n            {\r\n              property: {\r\n                name: \"recorded_at\"\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      };\r\n};\r\n","import { Scatter } from \"react-chartjs-2\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Component that holds our graph object.\r\n */\r\nexport default class Graph extends React.PureComponent {\r\n  render = () => {\r\n    return <Scatter data={this.props.data} options={this.props.options} />;\r\n  };\r\n}\r\n","import moment from \"moment\";\r\nimport { chartBuilder } from \"../../../helpers/builders.js\";\r\nimport React from \"react\";\r\nimport Graph from \"../../../components/Graph.js\";\r\n\r\nexport default {\r\n  label: \"Temperature\",\r\n  id: \"URBAN-Temperature\",\r\n  handler: function(retval, d) {\r\n    let retVals = d.entity.properties.data.stringValue.split(\" \");\r\n    let elem = {};\r\n    elem.y = parseFloat(retVals[0]);\r\n    elem.x = moment(d.entity.properties.recorded_at.stringValue);\r\n\r\n    // Check if the last element was greater than 10 minutes ago, we disjoint it then\r\n    if (\r\n      retval.length > 0 &&\r\n      elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\r\n    ) {\r\n      retval.push({\r\n        y: NaN,\r\n        x: elem.x\r\n      });\r\n    }\r\n    retval.push(elem);\r\n  },\r\n  parser: function(data) {\r\n    return chartBuilder(\"#dcedc8\", this.label, this.id, data);\r\n  },\r\n  element: function(data) {\r\n    return <Graph key={this.id} data={data || {}} options={this.options} />;\r\n  },\r\n  options: {\r\n    animation: {\r\n      duration: 500\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: true\r\n          },\r\n          type: \"time\",\r\n          distribution: \"linear\", // Distances can vary, based on time\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Time\"\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          id: \"Temperature\",\r\n          position: \"left\",\r\n          gridLines: {\r\n            display: true\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Temperature (C)\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n};\r\n","import moment from \"moment\";\r\nimport { chartBuilder } from \"../../../helpers/builders.js\";\r\nimport React from \"react\";\r\nimport Graph from \"../../../components/Graph.js\";\r\n\r\nexport default {\r\n  label: \"Power\",\r\n  id: \"URBAN-Power\",\r\n  handler: function(retval, d) {\r\n    let elem = {};\r\n    elem.y = parseFloat(d.entity.properties.data.stringValue);\r\n    elem.x = moment(d.entity.properties.recorded_at.stringValue);\r\n\r\n    // Check if the last element was greater than 10 minutes ago, we disjoint it then\r\n    if (\r\n      retval.length > 0 &&\r\n      elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\r\n    ) {\r\n      retval.push({\r\n        y: NaN,\r\n        x: elem.x\r\n      });\r\n    }\r\n    retval.push(elem);\r\n  },\r\n  parser: function(data) {\r\n    return chartBuilder(\"#80deea\", this.label, this.id, data);\r\n  },\r\n  element: function(data) {\r\n    return <Graph key={this.id} data={data || {}} options={this.options} />;\r\n  },\r\n  options: {\r\n    animation: {\r\n      duration: 500\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: true\r\n          },\r\n          type: \"time\",\r\n          distribution: \"linear\", // Distances can vary, based on time\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Time\"\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          id: \"Power\",\r\n          position: \"left\",\r\n          gridLines: {\r\n            display: true\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"State of Charge (%)\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport config from \"../config/config.js\";\r\nimport moment from \"moment\";\r\n\r\nimport \"ol/ol.css\";\r\nimport * as ol from \"ol\";\r\nimport * as layer from \"ol/layer\";\r\nimport * as proj from \"ol/proj\";\r\nimport * as geom from \"ol/geom\";\r\nimport * as style from \"ol/style\";\r\nimport * as source from \"ol/source\";\r\nimport * as control from \"ol/control\";\r\n\r\n/**\r\n * Component that holds our map.\r\n */\r\nexport default class MapContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.features = {};\r\n    this.state = {\r\n      map: null,\r\n      loaded: false,\r\n      height: 0\r\n    };\r\n  }\r\n\r\n  clearFeature = feature => {\r\n    if (this.features[feature]) {\r\n      this.features[feature]\r\n        .getSource()\r\n        .getFeatures()\r\n        .forEach(feat =>\r\n          this.features[feature].getSource().removeFeature(feat)\r\n        );\r\n    }\r\n  };\r\n\r\n  formatCoordinate = coord => {\r\n    return proj.fromLonLat([coord.lng, coord.lat]);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"resize\", this.resizeListener);\r\n    this.setState(\r\n      {\r\n        height: document.getElementById(\"map\").clientWidth * 0.5\r\n      },\r\n      () => {\r\n        let map = new ol.Map({\r\n          view: new ol.View({\r\n            center: this.formatCoordinate(config.map.defaults.center),\r\n            zoom: config.map.defaults.zoom\r\n          }),\r\n          layers: [\r\n            new layer.Tile({\r\n              source: new source.OSM()\r\n            })\r\n          ],\r\n          controls: control\r\n            .defaults()\r\n            .extend([new control.FullScreen(), new control.ScaleLine()]),\r\n          target: \"map\"\r\n        });\r\n\r\n        this.setState(\r\n          {\r\n            map: map,\r\n            loaded: true\r\n          },\r\n          this.bootstrapOverlay\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  resizeListener = () => {\r\n    this.setState({\r\n      height: document.getElementById(\"map\").clientWidth * 0.5\r\n    });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener(\"resize\", this.resizeListener);\r\n    this.features = {};\r\n    this.setState({\r\n      map: null,\r\n      loaded: false,\r\n      height: 0\r\n    });\r\n  };\r\n\r\n  bootstrapOverlay = () => {\r\n    this.features.overlay = new ol.Overlay({\r\n      element: document.getElementById(\"popup\"),\r\n      autoPan: true,\r\n      autoPanAnimation: {\r\n        duration: 250\r\n      }\r\n    });\r\n    this.state.map.addOverlay(this.features.overlay);\r\n\r\n    this.state.map.on(\"pointermove\", e => {\r\n      if (this.state.map.hasFeatureAtPixel(e.pixel) === true) {\r\n        let features = this.state.map.getFeaturesAtPixel(e.pixel);\r\n        if (features.length < 5) {\r\n          features.forEach(feature => {\r\n            if (feature.get(\"name\") === \"point\") {\r\n              document.getElementById(\"popup-content\").innerHTML = `<b>${moment(\r\n                feature.get(\"timestamp\")\r\n              ).format(\"HH:mm:ss A\")}</b>`;\r\n              this.features.overlay.setPosition(e.coordinate);\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        this.features.overlay.setPosition(undefined);\r\n      }\r\n    });\r\n  };\r\n\r\n  centerMap = () => {\r\n    if (this.props.data && this.props.data.length > 0) {\r\n      this.state.map\r\n        .getView()\r\n        .setCenter(\r\n          this.formatCoordinate(this.props.data[this.props.data.length - 1])\r\n        );\r\n    }\r\n  };\r\n\r\n  drawLineOnMap = () => {\r\n    if (this.props.data && this.props.data.length > 0) {\r\n      if (this.features.lines) {\r\n        this.clearFeature(\"lines\");\r\n      }\r\n      let feature = new ol.Feature({\r\n        geometry: new geom.LineString(\r\n          this.props.data.map(e => this.formatCoordinate(e))\r\n        ),\r\n        name: \"lines\"\r\n      });\r\n      this.features.lines = new layer.Vector({\r\n        source: new source.Vector({\r\n          features: [feature]\r\n        })\r\n      });\r\n      feature.setStyle(\r\n        new style.Style({ stroke: new style.Stroke({ width: 4 }) })\r\n      );\r\n      this.state.map.addLayer(this.features.lines);\r\n    } else {\r\n      // Clear the map property from the line\r\n      this.clearFeature(\"lines\");\r\n    }\r\n  };\r\n\r\n  drawMarkersOnMap = () => {\r\n    if (this.props.data && this.props.data.length > 0) {\r\n      if (this.features.markers) {\r\n        this.clearFeature(\"markers\");\r\n      }\r\n      let features = [];\r\n      this.props.data.forEach(e => {\r\n        features.push(\r\n          new ol.Feature({\r\n            geometry: new geom.Point(this.formatCoordinate(e)),\r\n            name: \"point\",\r\n            timestamp: e.timestamp\r\n          })\r\n        );\r\n      });\r\n\r\n      this.features.markers = new layer.Vector({\r\n        source: new source.Vector({\r\n          features\r\n        })\r\n      });\r\n\r\n      this.state.map.addLayer(this.features.markers);\r\n    } else {\r\n      this.clearFeature(\"markers\");\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    if (this.state.loaded) {\r\n      this.drawLineOnMap();\r\n      this.drawMarkersOnMap();\r\n      this.centerMap();\r\n    }\r\n    return (\r\n      <div id=\"map\" style={{ height: this.state.height }}>\r\n        <div\r\n          id=\"popup\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            border: \"1px solid white\",\r\n            borderRadius: \"8px\"\r\n          }}\r\n        >\r\n          <div id=\"popup-content\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import datasets from \"./datasets.js\";\r\n\r\nlet config = {\r\n  datastore: {\r\n    // https://cloud.google.com/datastore/docs/reference/data/rest/v1/projects/runQuery\r\n    projectId: \"supermileage-telemetry-266511\",\r\n    getQueryUrl: function() {\r\n      return (\r\n        \"https://datastore.googleapis.com/v1/projects/\" +\r\n        this.projectId +\r\n        \":runQuery?alt=json\"\r\n      );\r\n    },\r\n    generatePayload: (token, body) => {\r\n      return {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: body\r\n      };\r\n    },\r\n    datasets: datasets\r\n  },\r\n  oauth: {\r\n    clientId:\r\n      \"929098184548-qq0n3oj40b7s2qbk8nmjm9cn5c6bs15l.apps.googleusercontent.com\"\r\n  },\r\n  map: {\r\n    defaults: {\r\n      // Vancouver\r\n      center: { lat: 49.267941, lng: -123.24736 },\r\n      zoom: 12\r\n    }\r\n  },\r\n  refreshInterval: 5000\r\n};\r\n\r\nexport default config;","import UrbanTemperature from \"./datasets/Urban/Temperature.js\";\r\nimport UrbanPower from \"./datasets/Urban/Power.js\";\r\nimport UrbanLocation from \"./datasets/Urban/Location.js\";\r\n\r\nimport ProtoSpeed from \"./datasets/Proto/Speed.js\";\r\nimport ProtoLocation from \"./datasets/Proto/Location.js\";\r\n\r\nlet datasets = {\r\n  Urban: [\r\n    UrbanTemperature,\r\n    UrbanPower,\r\n    UrbanLocation\r\n  ],\r\n  Proto: [\r\n    ProtoSpeed,\r\n    ProtoLocation\r\n  ]\r\n};\r\n\r\nexport default datasets;\r\n","import React from \"react\";\r\nimport MapContainer from \"../../../components/MapContainer.js\";\r\n\r\nexport default {\r\n  label: \"Location\",\r\n  id: \"URBAN-Location\",\r\n  handler: function(retval, d) {\r\n    let NMEASeq = d.entity.properties.data.stringValue.split(\",\");\r\n    let lat =\r\n      parseInt(parseInt(NMEASeq[3]) / 100) +\r\n      parseFloat(parseFloat(NMEASeq[3]) % 100) / 60;\r\n    let lng =\r\n      parseInt(parseInt(NMEASeq[5]) / 100) +\r\n      parseFloat(parseFloat(NMEASeq[5]) % 100) / 60;\r\n    lat = NMEASeq[4] === \"S\" ? -lat : lat;\r\n    lng = NMEASeq[6] === \"W\" ? -lng : lng;\r\n    let timestamp = d.entity.properties.recorded_at.stringValue;\r\n    let elem = { lat, lng, timestamp };\r\n    retval.push(elem);\r\n  },\r\n  parser: function(data) {\r\n    return data;\r\n  },\r\n  element: function(data) {\r\n    return <MapContainer key={this.id} data={data || []} />;\r\n  }\r\n};\r\n","import moment from \"moment\";\r\nimport { chartBuilder } from \"../../../helpers/builders.js\";\r\nimport React from \"react\";\r\nimport Graph from \"../../../components/Graph.js\";\r\n\r\nexport default {\r\n  label: \"Speed\",\r\n  id: \"PROTO-Speed\",\r\n  handler: function(retval, d) {\r\n    let data = d.entity.properties.data.stringValue.split(\",\");\r\n\r\n    let elem = {};\r\n    elem.y = parseFloat(data[data.indexOf(\"K\") - 1]);\r\n    elem.x = moment(d.entity.properties.recorded_at.stringValue);\r\n\r\n    // Check if the last element was greater than 10 minutes ago, we disjoint it then\r\n    if (\r\n      retval.length > 0 &&\r\n      elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\r\n    ) {\r\n      retval.push({\r\n        y: NaN,\r\n        x: elem.x\r\n      });\r\n    }\r\n    retval.push(elem);\r\n  },\r\n  parser: function(data) {\r\n    return chartBuilder(\"#8c9eff\", this.label, this.id, data);\r\n  },\r\n  element: function(data) {\r\n    return <Graph key={this.id} data={data || {}} options={this.options} />;\r\n  },\r\n  options: {\r\n    animation: {\r\n      duration: 500\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: true\r\n          },\r\n          type: \"time\",\r\n          distribution: \"linear\", // Distances can vary, based on time\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Time\"\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          id: \"PROTO-Speed\",\r\n          position: \"left\",\r\n          gridLines: {\r\n            display: true\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"km/h\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport MapContainer from \"../../../components/MapContainer.js\";\r\n\r\nexport default {\r\n  label: \"Location\",\r\n  id: \"PROTO-Location\",\r\n  handler: function(retval, d) {\r\n    let NMEASeq = d.entity.properties.data.stringValue.split(\",\");\r\n    let lat =\r\n      parseInt(parseInt(NMEASeq[3]) / 100) +\r\n      parseFloat(parseFloat(NMEASeq[3]) % 100) / 60;\r\n    let lng =\r\n      parseInt(parseInt(NMEASeq[5]) / 100) +\r\n      parseFloat(parseFloat(NMEASeq[5]) % 100) / 60;\r\n    lat = NMEASeq[4] === \"S\" ? -lat : lat;\r\n    lng = NMEASeq[6] === \"W\" ? -lng : lng;\r\n    let timestamp = d.entity.properties.recorded_at.stringValue;\r\n    let elem = { lat, lng, timestamp };\r\n    retval.push(elem);\r\n  },\r\n  parser: function(data) {\r\n    return data;\r\n  },\r\n  element: function(data) {\r\n    return <MapContainer key={this.id} data={data || []} />;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default class CustomButton extends React.PureComponent {\r\n  render = () => {\r\n    return (\r\n      <Button\r\n        style={{ width: 80 }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={this.props.updating || this.props.liveMode}\r\n        onClick={this.props.getDataHandler}\r\n      >\r\n        {this.props.liveMode ? \"Live\" : \"Update\"}\r\n      </Button>\r\n    );\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nexport default class DayRange extends React.PureComponent {\r\n  // Render my pickers; all the state is lifted up into\r\n  // the parent element, thus all the changes are handled\r\n  // by props; this element does not have state\r\n  render = () => {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <Grid item xs={12} sm={6}>\r\n            <DateTimePicker\r\n              fullWidth\r\n              label=\"Start time\"\r\n              format=\"MMM D, hh:mm a\"\r\n              onChange={this.props.onChangeStart}\r\n              value={this.props.startTime}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <DateTimePicker\r\n              fullWidth\r\n              label=\"End time\"\r\n              format=\"MMM D, hh:mm a\"\r\n              onChange={this.props.onChangeEnd}\r\n              value={this.props.endTime}\r\n              emptyLabel=\"now\"\r\n              disabled={this.props.endTime === null}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  };\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport CustomButton from \"./CustomButton.js\";\r\nimport moment from \"moment\";\r\nimport config from \"../config/config.js\";\r\nimport { queryBuilder } from \"../helpers/builders.js\";\r\nimport DayRange from \"./DayRange.js\";\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Grid,\r\n  Switch,\r\n  MenuItem,\r\n  Select,\r\n  withStyles,\r\n  InputLabel,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Sizing1Icon from \"@material-ui/icons/Filter1\";\r\nimport Sizing2Icon from \"@material-ui/icons/Filter2\";\r\nimport Sizing3Icon from \"@material-ui/icons/Filter3\";\r\nimport Sizing4Icon from \"@material-ui/icons/Filter4\";\r\n\r\nconst customStyle = theme => ({\r\n  select: {\r\n    minWidth: 120\r\n  },\r\n  container: {\r\n    padding: theme.spacing(2)\r\n  }\r\n});\r\n\r\nconst sizingIcons = {\r\n  1: <Sizing1Icon />,\r\n  2: <Sizing2Icon />,\r\n  3: <Sizing3Icon />,\r\n  4: <Sizing4Icon />\r\n};\r\n\r\nclass AppContainer extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startTime: moment(),\r\n      endTime: moment(),\r\n      liveMode: false,\r\n      updating: false,\r\n      dropdownOpen: false,\r\n      datasets: [],\r\n      data: {},\r\n      car: undefined,\r\n      sizing: 1\r\n    };\r\n  }\r\n\r\n  // Handler functions for our starttime change, which\r\n  // our dayrange will receieve as a prop\r\n  startTimeChangeHandler = time => {\r\n    this.setState({\r\n      startTime: time\r\n    });\r\n  };\r\n\r\n  endTimeChangeHandler = time => {\r\n    this.setState({\r\n      endTime: time\r\n    });\r\n  };\r\n\r\n  changeSizing = () => {\r\n    const max = Math.max(...Object.keys(sizingIcons));\r\n    this.setState({\r\n      sizing: this.state.sizing + 1 > max ? 1 : this.state.sizing + 1\r\n    });\r\n  };\r\n\r\n  // Handle the current boolean for \"live\" plotting\r\n  liveUpdateHandler = e => {\r\n    if (e.target.checked) {\r\n      this.setState({\r\n        liveMode: true,\r\n        endTime: null\r\n      });\r\n      this.intervalHandler();\r\n    } else {\r\n      clearTimeout(this.timeout);\r\n      this.setState({\r\n        liveMode: false\r\n      });\r\n      this.endTimeChangeHandler(moment());\r\n    }\r\n  };\r\n\r\n  intervalHandler = async () => {\r\n    await this.updateMetrics();\r\n    if (this.state.liveMode) {\r\n      this.timeout = setTimeout(this.intervalHandler, config.refreshInterval);\r\n    }\r\n  };\r\n\r\n  getDataHandler = async (lastCursor, retval, datasetId, handler) => {\r\n    let req = queryBuilder(\r\n      this.state.liveMode,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      datasetId\r\n    );\r\n\r\n    if (lastCursor !== null) req.query.startCursor = lastCursor;\r\n\r\n    let response = await fetch(\r\n      config.datastore.getQueryUrl(),\r\n      config.datastore.generatePayload(this.props.token, JSON.stringify(req))\r\n    );\r\n\r\n    let json = await response.json();\r\n\r\n    try {\r\n      if (\"entityResults\" in json.batch) {\r\n        json.batch.entityResults.forEach(d => {\r\n          handler(retval, d);\r\n        });\r\n      }\r\n\r\n      // There are still results remaining\r\n      if (json.batch.moreResults === \"NOT_FINISHED\") {\r\n        return await this.getDataHandler(\r\n          json.batch.endCursor,\r\n          retval,\r\n          datasetId,\r\n          handler\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return retval;\r\n  };\r\n\r\n  getData = async () => {\r\n    let newData = {};\r\n\r\n    if (this.state.car) {\r\n      for (let dataset of config.datastore.datasets[this.state.car]) {\r\n        if (this.state.datasets.includes(dataset.label)) {\r\n          let data = await this.getDataHandler(\r\n            null,\r\n            [],\r\n            dataset.id,\r\n            dataset.handler\r\n          );\r\n          newData[dataset.id] = dataset.parser(data);\r\n        }\r\n      }\r\n    }\r\n\r\n    return newData;\r\n  };\r\n\r\n  updateMetrics = async () => {\r\n    this.setState({\r\n      updating: true\r\n    });\r\n\r\n    let newData = await this.getData();\r\n\r\n    this.setState({\r\n      updating: false,\r\n      data: newData\r\n    });\r\n  };\r\n\r\n  changeCar = e => {\r\n    if (e.target.value !== this.state.car) {\r\n      this.setState({\r\n        car: e.target.value,\r\n        data: {},\r\n        datasets: (config.datastore.datasets[e.target.value] || []).map(\r\n          data => data.label\r\n        )\r\n      });\r\n    }\r\n  };\r\n\r\n  populateCars = () => {\r\n    let ret = [];\r\n    for (let car in config.datastore.datasets) {\r\n      ret.push(\r\n        <MenuItem value={car} key={car}>\r\n          {car}\r\n        </MenuItem>\r\n      );\r\n    }\r\n    return ret;\r\n  };\r\n\r\n  modifyDatasets = e => {\r\n    if (e.target.checked) {\r\n      this.state.datasets.push(e.target.value);\r\n      this.setState({\r\n        datasets: this.state.datasets.slice()\r\n      });\r\n    } else {\r\n      this.setState({\r\n        datasets: this.state.datasets.filter(value => value !== e.target.value)\r\n      });\r\n    }\r\n  };\r\n\r\n  getCarProperties = () => {\r\n    return this.state.car ? (\r\n      config.datastore.datasets[this.state.car].map(data => {\r\n        return (\r\n          <Grid item key={data.label}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={this.modifyDatasets}\r\n                  value={data.label}\r\n                  checked={this.state.datasets.includes(data.label)}\r\n                ></Checkbox>\r\n              }\r\n              label={data.label}\r\n            ></FormControlLabel>\r\n          </Grid>\r\n        );\r\n      })\r\n    ) : (\r\n      <Typography>You have to select a car first!</Typography>\r\n    );\r\n  };\r\n\r\n  render = () => {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Container className={classes.container}>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n              <FormControl\r\n                onClick={e => e.stopPropagation()}\r\n                onFocus={e => e.stopPropagation()}\r\n              >\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  alignItems=\"center\"\r\n                  justify=\"flex-start\"\r\n                >\r\n                  <Grid item>\r\n                    <DayRange\r\n                      startTime={this.state.startTime}\r\n                      endTime={this.state.endTime}\r\n                      onChangeStart={this.startTimeChangeHandler}\r\n                      onChangeEnd={this.endTimeChangeHandler}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Grid\r\n                      container\r\n                      spacing={1}\r\n                      alignItems=\"center\"\r\n                      justify=\"flex-start\"\r\n                    >\r\n                      <Grid item xs={12} sm=\"auto\">\r\n                        <FormControl>\r\n                          <InputLabel>Car</InputLabel>\r\n                          <Select\r\n                            className={classes.select}\r\n                            label=\"Car\"\r\n                            value={this.state.car || \"\"}\r\n                            onChange={this.changeCar}\r\n                          >\r\n                            {this.populateCars()}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item xs=\"auto\" sm=\"auto\">\r\n                        <Tooltip title=\"Live mode\">\r\n                          <Switch\r\n                            checked={this.state.liveMode}\r\n                            onChange={this.liveUpdateHandler}\r\n                          />\r\n                        </Tooltip>\r\n                      </Grid>\r\n                      <Grid item xs=\"auto\" sm=\"auto\">\r\n                        <Tooltip title=\"Change density\">\r\n                          <IconButton onClick={this.changeSizing}>\r\n                            {sizingIcons[this.state.sizing]}\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Grid>\r\n                      <Grid item xs=\"auto\" sm=\"auto\">\r\n                        <CustomButton\r\n                          liveMode={this.state.liveMode}\r\n                          getDataHandler={this.updateMetrics}\r\n                          updating={this.state.updating}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </FormControl>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n                {this.getCarProperties()}\r\n              </Grid>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Container>\r\n\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={1} justify=\"center\">\r\n            {this.state.car\r\n              ? config.datastore.datasets[this.state.car]\r\n                  .filter(data => this.state.datasets.includes(data.label))\r\n                  .map((dataset, index) => {\r\n                    return (\r\n                      <Grid\r\n                        item\r\n                        xs={12 / this.state.sizing}\r\n                        key={index + this.state.sizing}\r\n                      >\r\n                        <Paper>\r\n                          {dataset.element(this.state.data[dataset.id])}\r\n                        </Paper>\r\n                      </Grid>\r\n                    );\r\n                  })\r\n              : undefined}\r\n          </Grid>\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withStyles(customStyle)(AppContainer);\r\n","import config from \"./config/config.js\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport AppContainer from \"./components/AppContainer.js\";\r\nimport React from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  Container,\r\n  Grid,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst customStyle = {\r\n  root: {\r\n    paddingTop: 200\r\n  }\r\n};\r\n\r\nclass App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedOn: false,\r\n      token: undefined\r\n    };\r\n  }\r\n\r\n  oauthSuccess = response => {\r\n    this.setState({\r\n      loggedOn: true,\r\n      token: response.accessToken\r\n    });\r\n  };\r\n\r\n  oauthFailure = response => {\r\n    console.log(response, \"Oauth Failed.\");\r\n  };\r\n\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <CssBaseline>\r\n        {this.state.loggedOn ? (\r\n          <AppContainer token={this.state.token} />\r\n        ) : (\r\n          <Container maxWidth=\"xs\" className={classes.root}>\r\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <GoogleLogin\r\n                    clientId={config.oauth.clientId}\r\n                    scope=\"profile email https://www.googleapis.com/auth/datastore\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess={this.oauthSuccess}\r\n                    onFailure={this.oauthFailure}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        )}\r\n      </CssBaseline>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withStyles(customStyle)(App);\r\n","import App from \"./App.js\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}