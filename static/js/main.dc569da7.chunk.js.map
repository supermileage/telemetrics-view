{"version":3,"sources":["helpers/builders.js","components/Graph.js","components/MapContainer.js","config/config.js","config/datasets.js","components/Toggle.js","components/Button.js","components/DayRange.js","components/Container.js","App.js","index.js"],"names":["chartBuilder","label","id","data","datasets","spanGaps","showLine","yAxisID","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Graph","render","props","options","React","Component","MapContainer","clearFeature","feature","features","getSource","getFeatures","forEach","feat","removeFeature","formatCoordinate","coord","proj","lng","lat","componentDidMount","map","ol","view","center","config","defaults","zoom","layers","layer","source","controls","control","extend","target","setState","loaded","bootstrapOverlay","shouldComponentUpdate","nextProps","nextState","length","JSON","stringify","componentWillUnmount","overlay","element","document","getElementById","autoPan","autoPanAnimation","duration","state","addOverlay","on","e","hasFeatureAtPixel","pixel","getFeaturesAtPixel","get","innerHTML","moment","format","setPosition","coordinate","undefined","centerMap","getView","setCenter","drawLineOnMap","lines","geometry","geom","name","setStyle","style","stroke","width","addLayer","drawMarkersOnMap","markers","push","timestamp","datastore","projectId","getQueryUrl","this","generatePayload","token","body","method","headers","Authorization","Accept","Urban","handler","retval","d","retVals","entity","properties","stringValue","split","elem","y","parseFloat","x","recorded_at","unix","NaN","parser","className","key","animation","scales","xAxes","gridLines","display","type","distribution","scaleLabel","labelString","yAxes","position","NMEASeq","parseInt","Proto","indexOf","oauth","clientId","refreshInterval","Toggle","onChange","checked","defaultChecked","htmlFor","Button","liveMode","updating","onClick","getDataHandler","disabled","DayRange","onChangeStart","value","startTime","onChangeEnd","inputProps","endTime","Container","addEventListener","matches","dropdownOpen","setDropdownState","dropState","startTimeChangeHandler","time","endTimeChangeHandler","liveUpdateHandler","intervalHandler","clearTimeout","timeout","a","async","updateMetrics","setTimeout","lastCursor","dataset","req","query","filter","compositeFilter","filters","propertyFilter","op","property","toISOString","kind","projection","startCursor","fetch","response","json","batch","entityResults","moreResults","endCursor","console","log","getData","newData","car","changeCar","populateCars","ret","role","index","App","oauthSuccess","loggedOn","accessToken","oauthFailure","infoHide","infoOn","headerInfo","headerLogin","scope","buttonText","onSuccess","onFailure","ReactDOM"],"mappings":"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","file":"static/js/main.dc569da7.chunk.js","sourcesContent":["export const chartBuilder = (label, id, data) => {\n  return {\n    datasets: [\n      {\n        spanGaps: false,\n        showLine: true,\n        label: label,\n        yAxisID: id,\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: data\n      }\n    ]\n  };\n};\n\nexport const queryBuilder = (liveMode, startTime, endTime, id) => {\n  return liveMode\n    ? {\n        query: {\n          filter: {\n            compositeFilter: {\n              filters: [\n                {\n                  propertyFilter: {\n                    op: \"GREATER_THAN_OR_EQUAL\",\n                    property: {\n                      name: \"recorded_at\"\n                    },\n                    value: {\n                      stringValue: startTime.toISOString()\n                    }\n                  }\n                },\n                {\n                  propertyFilter: {\n                    op: \"EQUAL\",\n                    property: {\n                      name: \"event\"\n                    },\n                    value: {\n                      stringValue: id\n                    }\n                  }\n                }\n              ],\n              op: \"AND\"\n            }\n          },\n          kind: [\n            {\n              name: \"ParticleEvent\"\n            }\n          ],\n          projection: [\n            {\n              property: {\n                name: \"data\"\n              }\n            },\n            {\n              property: {\n                name: \"recorded_at\"\n              }\n            }\n          ]\n        }\n      }\n    : {\n        query: {\n          filter: {\n            compositeFilter: {\n              filters: [\n                {\n                  propertyFilter: {\n                    op: \"GREATER_THAN_OR_EQUAL\",\n                    property: {\n                      name: \"recorded_at\"\n                    },\n                    value: {\n                      stringValue: startTime.toISOString()\n                    }\n                  }\n                },\n                {\n                  propertyFilter: {\n                    op: \"LESS_THAN_OR_EQUAL\",\n                    property: {\n                      name: \"recorded_at\"\n                    },\n                    value: {\n                      stringValue: endTime.toISOString()\n                    }\n                  }\n                },\n                {\n                  propertyFilter: {\n                    op: \"EQUAL\",\n                    property: {\n                      name: \"event\"\n                    },\n                    value: {\n                      stringValue: id\n                    }\n                  }\n                }\n              ],\n              op: \"AND\"\n            }\n          },\n          kind: [\n            {\n              name: \"ParticleEvent\"\n            }\n          ],\n          projection: [\n            {\n              property: {\n                name: \"data\"\n              }\n            },\n            {\n              property: {\n                name: \"recorded_at\"\n              }\n            }\n          ]\n        }\n      };\n};\n","import { Scatter } from \"react-chartjs-2\";\nimport React from \"react\";\n\n/**\n * Component that holds our graph object.\n */\nexport default class Graph extends React.Component {\n  render = () => {\n    return (\n      <div>\n        <Scatter data={this.props.data} options={this.props.options} />\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport config from \"../config/config.js\";\nimport moment from \"moment\";\n\nimport \"ol/ol.css\";\nimport * as ol from \"ol\";\nimport * as layer from \"ol/layer\";\nimport * as proj from \"ol/proj\";\nimport * as geom from \"ol/geom\";\nimport * as style from \"ol/style\";\nimport * as source from \"ol/source\";\nimport * as control from \"ol/control\";\n\n/**\n * Component that holds our map.\n */\nexport default class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.features = {};\n    this.state = {\n      map: null,\n      loaded: false\n    };\n  }\n\n  clearFeature = feature => {\n    this.features[feature]\n      .getSource()\n      .getFeatures()\n      .forEach(feat => this.features[feature].getSource().removeFeature(feat));\n  };\n\n  formatCoordinate = coord => {\n    return proj.fromLonLat([coord.lng, coord.lat]);\n  };\n\n  componentDidMount = () => {\n    let map = new ol.Map({\n      view: new ol.View({\n        center: this.formatCoordinate(config.map.defaults.center),\n        zoom: config.map.defaults.zoom\n      }),\n      layers: [\n        new layer.Tile({\n          source: new source.OSM()\n        })\n      ],\n      controls: control\n        .defaults()\n        .extend([new control.FullScreen(), new control.ScaleLine()]),\n      target: \"map\"\n    });\n\n    this.setState({\n      map: map,\n      loaded: true\n    }, this.bootstrapOverlay);\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (!this.props.data) {\n      return true;\n    }\n    if (nextProps.data && this.props.data.length === nextProps.data.length) {\n      if (JSON.stringify(this.props.data) === JSON.stringify(nextProps.data)) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  };\n\n  componentWillUnmount = () => {\n    this.features = {};\n    this.setState({\n      map: null,\n      loaded: false\n    });\n  };\n\n  bootstrapOverlay = () => {\n    this.features.overlay = new ol.Overlay({\n      element: document.getElementById(\"popup\"),\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250\n      }\n    });\n    this.state.map.addOverlay(this.features.overlay);\n\n    this.state.map.on(\"pointermove\", e => {\n      if (this.state.map.hasFeatureAtPixel(e.pixel) === true) {\n        let features = this.state.map.getFeaturesAtPixel(e.pixel);\n        if (features.length < 5) {\n          features.forEach(feature => {\n            if (feature.get(\"name\") === \"point\") {\n              document.getElementById(\n                \"popup-content\"\n              ).innerHTML = `<b>${moment(feature.get(\"timestamp\")).format(\n                \"HH:mm:ss A\"\n              )}</b>`;\n              this.features.overlay.setPosition(e.coordinate);\n            }\n          });\n        }\n      } else {\n        this.features.overlay.setPosition(undefined);\n      }\n    });\n  };\n\n  centerMap = () => {\n    if (this.props.data && this.props.data.length > 0) {\n      this.state.map\n        .getView()\n        .setCenter(\n          this.formatCoordinate(this.props.data[this.props.data.length - 1])\n        );\n    }\n  };\n\n  drawLineOnMap = () => {\n    if (this.props.data && this.props.data.length > 0) {\n      if (this.features.lines) {\n        this.clearFeature(\"lines\");\n      }\n      let feature = new ol.Feature({\n        geometry: new geom.LineString(\n          this.props.data.map(e => this.formatCoordinate(e))\n        ),\n        name: \"lines\"\n      });\n      this.features.lines = new layer.Vector({\n        source: new source.Vector({\n          features: [feature]\n        })\n      });\n      feature.setStyle(\n        new style.Style({ stroke: new style.Stroke({ width: 4 }) })\n      );\n      this.state.map.addLayer(this.features.lines);\n    } else {\n      // Clear the map property from the line\n      this.clearFeature(\"lines\");\n    }\n  };\n\n  drawMarkersOnMap = () => {\n    if (this.props.data && this.props.data.length > 0) {\n      if (this.features.markers) {\n        this.clearFeature(\"markers\");\n      }\n      let features = [];\n      this.props.data.forEach(e => {\n        features.push(\n          new ol.Feature({\n            geometry: new geom.Point(this.formatCoordinate(e)),\n            name: \"point\",\n            timestamp: e.timestamp\n          })\n        );\n      });\n\n      this.features.markers = new layer.Vector({\n        source: new source.Vector({\n          features\n        })\n      });\n\n      this.state.map.addLayer(this.features.markers);\n    } else {\n      this.clearFeature(\"markers\");\n    }\n  };\n\n  render = () => {\n    if (this.state.loaded) {\n      this.drawLineOnMap();\n      this.drawMarkersOnMap();\n      this.centerMap();\n    }\n    return (\n      <div id=\"map\">\n        <div id=\"popup\">\n          <div id=\"popup-content\"></div>\n        </div>\n      </div>\n    );\n  };\n}\n","import datasets from \"./datasets.js\";\n\nlet config = {\n  datastore: {\n    // https://cloud.google.com/datastore/docs/reference/data/rest/v1/projects/runQuery\n    projectId: \"supermileage-telemetry-266511\",\n    getQueryUrl: function() {\n      return (\n        \"https://datastore.googleapis.com/v1/projects/\" +\n        this.projectId +\n        \":runQuery?alt=json\"\n      );\n    },\n    generatePayload: (token, body) => {\n      return {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + token,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      };\n    },\n    datasets: datasets\n  },\n  oauth: {\n    clientId:\n      \"929098184548-qq0n3oj40b7s2qbk8nmjm9cn5c6bs15l.apps.googleusercontent.com\"\n  },\n  map: {\n    defaults: {\n      // Vancouver\n      center: { lat: 49.267941, lng: -123.24736 },\n      zoom: 12\n    }\n  },\n  refreshInterval: 8000\n};\n\nexport default config;","import moment from \"moment\";\nimport { chartBuilder } from \"../helpers/builders.js\";\nimport React from \"react\";\nimport Graph from \"../components/Graph.js\";\nimport MapContainer from \"../components/MapContainer.js\";\n\nlet datasets = {\n  Urban: [\n    {\n      label: \"Temperature\",\n      id: \"Temperature\",\n      handler: function(retval, d) {\n        let retVals = d.entity.properties.data.stringValue.split(\" \");\n        let elem = {};\n        elem.y = parseFloat(retVals[0]);\n        elem.x = moment(d.entity.properties.recorded_at.stringValue);\n\n        // Check if the last element was greater than 10 minutes ago, we disjoint it then\n        if (\n          retval.length > 0 &&\n          elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\n        ) {\n          retval.push({\n            y: NaN,\n            x: elem.x\n          });\n        }\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return chartBuilder(label, id, data);\n      },\n      element: function(data) {\n        return (\n          <div className=\"column is-half-desktop\" key={this.id}>\n            <div className=\"box\">\n              <Graph data={data || {}} options={this.options} />\n            </div>\n          </div>\n        );\n      },\n      options: {\n        animation: {\n          duration: 500\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false\n              },\n              type: \"time\",\n              distribution: \"linear\", // Distances can vary, based on time\n              scaleLabel: {\n                display: true,\n                labelString: \"Time\"\n              }\n            }\n          ],\n          yAxes: [\n            {\n              id: \"Temperature\",\n              position: \"left\",\n              gridLines: {\n                display: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Temperature (C)\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      label: \"Power\",\n      id: \"Power\",\n      handler: function(retval, d) {\n        let elem = {};\n        elem.y = parseFloat(d.entity.properties.data.stringValue);\n        elem.x = moment(d.entity.properties.recorded_at.stringValue);\n\n        // Check if the last element was greater than 10 minutes ago, we disjoint it then\n        if (\n          retval.length > 0 &&\n          elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\n        ) {\n          retval.push({\n            y: NaN,\n            x: elem.x\n          });\n        }\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return chartBuilder(label, id, data);\n      },\n      element: function(data) {\n        return (\n          <div className=\"column is-half-desktop\" key={this.id}>\n            <div className=\"box\">\n              <Graph data={data || {}} options={this.options} />\n            </div>\n          </div>\n        );\n      },\n      options: {\n        animation: {\n          duration: 500\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false\n              },\n              type: \"time\",\n              distribution: \"linear\", // Distances can vary, based on time\n              scaleLabel: {\n                display: true,\n                labelString: \"Time\"\n              }\n            }\n          ],\n          yAxes: [\n            {\n              id: \"Power\",\n              position: \"left\",\n              gridLines: {\n                display: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"State of Charge (%)\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      label: \"Location\",\n      id: \"Location\",\n      handler: function(retval, d) {\n        let NMEASeq = d.entity.properties.data.stringValue.split(\",\");\n        let lat =\n          parseInt(parseInt(NMEASeq[3]) / 100) +\n          parseFloat(parseFloat(NMEASeq[3]) % 100) / 60;\n        let lng =\n          parseInt(parseInt(NMEASeq[5]) / 100) +\n          parseFloat(parseFloat(NMEASeq[5]) % 100) / 60;\n        lat = NMEASeq[4] === \"S\" ? -lat : lat;\n        lng = NMEASeq[6] === \"W\" ? -lng : lng;\n        let elem = { lat, lng };\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return data;\n      },\n      element: function(data) {\n        return (\n          <div className=\"column is-full\" key={this.id}>\n            <div className=\"card\">\n              <MapContainer data={data || []} />\n            </div>\n          </div>\n        );\n      }\n    }\n  ],\n  Proto: [\n    {\n      label: \"Speed\",\n      id: \"PROTO-Speed\",\n      handler: function(retval, d) {\n        let data = d.entity.properties.data.stringValue.split(\",\");\n        \n        let elem = {};\n        elem.y = parseFloat(data[data.indexOf(\"K\") - 1]);\n        elem.x = moment(d.entity.properties.recorded_at.stringValue);\n\n        // Check if the last element was greater than 10 minutes ago, we disjoint it then\n        if (\n          retval.length > 0 &&\n          elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\n        ) {\n          retval.push({\n            y: NaN,\n            x: elem.x\n          });\n        }\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return chartBuilder(label, id, data);\n      },\n      element: function(data) {\n        return (\n          <div className=\"column\" key={this.id}>\n            <div className=\"box\">\n              <Graph data={data || {}} options={this.options} />\n            </div>\n          </div>\n        );\n      },\n      options: {\n        animation: {\n          duration: 500\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false\n              },\n              type: \"time\",\n              distribution: \"linear\", // Distances can vary, based on time\n              scaleLabel: {\n                display: true,\n                labelString: \"Time\"\n              }\n            }\n          ],\n          yAxes: [\n            {\n              id: \"PROTO-Speed\",\n              position: \"left\",\n              gridLines: {\n                display: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"km/h\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      label: \"Location\",\n      id: \"PROTO-Location\",\n      handler: function(retval, d) {\n        let NMEASeq = d.entity.properties.data.stringValue.split(\",\");\n        let lat =\n          parseInt(parseInt(NMEASeq[3]) / 100) +\n          parseFloat(parseFloat(NMEASeq[3]) % 100) / 60;\n        let lng =\n          parseInt(parseInt(NMEASeq[5]) / 100) +\n          parseFloat(parseFloat(NMEASeq[5]) % 100) / 60;\n        lat = NMEASeq[4] === \"S\" ? -lat : lat;\n        lng = NMEASeq[6] === \"W\" ? -lng : lng;\n        let timestamp = d.entity.properties.recorded_at.stringValue;\n        let elem = { lat, lng, timestamp };\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return data;\n      },\n      element: function(data) {\n        return (\n          <div className=\"column is-full\" key={this.id}>\n            <div className=\"card\">\n              <MapContainer data={data || []} />\n            </div>\n          </div>\n        );\n      }\n    }\n  ]\n};\n\nexport default datasets;\n","import React from \"react\";\nimport \"bulma-switch/dist/css/bulma-switch.min.css\";\n\nexport default class Toggle extends React.Component {\n  render = () => {\n    return (\n      <div className=\"field\">\n        <input\n          id=\"switch\"\n          className=\"switch is-medium\"\n          type=\"checkbox\"\n          onChange={this.props.onChange}\n          checked={this.props.defaultChecked}\n        />\n        <label htmlFor=\"switch\"></label>\n      </div>\n    );\n  };\n}\n","import React from \"react\";\n\nexport default class Button extends React.Component {\n  render = () => {\n    return this.props.liveMode || this.props.updating ? (\n      <button\n        className=\"button is-info is-loading\"\n        onClick={this.props.getDataHandler}\n        disabled\n      >\n        Update\n      </button>\n    ) : (\n      <button className=\"button is-info\" onClick={this.props.getDataHandler}>\n        Update\n      </button>\n    );\n  };\n}\n","import React from \"react\";\nimport \"../css/datetime.css\";\nimport Datetime from \"react-datetime\";\n\nexport default class DayRange extends React.Component {\n  // Render my pickers; all the state is lifted up into\n  // the parent element, thus all the changes are handled\n  // by props; this element does not have state\n  render = () => {\n    return (\n      <div className=\"columns\">\n        <div className=\"column\">\n          <Datetime\n            className=\"input\"\n            type=\"date\"\n            onChange={this.props.onChangeStart}\n            value={this.props.startTime}\n          />\n        </div>\n        <div className=\"column\">\n          <Datetime\n            className=\"input\"\n            type=\"date\"\n            onChange={this.props.onChangeEnd}\n            inputProps={{\n              disabled: this.props.endTime === null\n            }}\n            value={this.props.endTime === null ? \"Current\" : this.props.endTime}\n          />\n        </div>\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport Toggle from \"./Toggle.js\";\nimport Button from \"./Button.js\";\nimport moment from \"moment\";\nimport config from \"../config/config.js\";\nimport { queryBuilder } from \"../helpers/builders.js\";\nimport DayRange from \"./DayRange.js\";\n\nexport default class Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startTime: moment(),\n      endTime: moment(),\n      liveMode: false,\n      updating: false,\n      dropdownOpen: false,\n      data: {},\n      car: \"Urban\"\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener(\"click\", e => {\n      if (!e.target.matches(\".dropdown-trigger *\")) {\n        if (this.state.dropdownOpen) {\n          this.setDropdownState(false);\n        }\n      }\n    });\n  };\n\n  setDropdownState = dropState => {\n    this.setState({\n      dropdownOpen: dropState\n    });\n  };\n\n  // Handler functions for our starttime change, which\n  // our dayrange will receieve as a prop\n  startTimeChangeHandler = time => {\n    this.setState({\n      startTime: time\n    });\n  };\n\n  endTimeChangeHandler = time => {\n    this.setState({\n      endTime: time\n    });\n  };\n\n  // Handle the current boolean for \"live\" plotting\n  liveUpdateHandler = e => {\n    if (e.target.checked) {\n      this.setState({\n        liveMode: true,\n        endTime: null\n      });\n      this.intervalHandler();\n    } else {\n      clearTimeout(this.timeout);\n      this.setState({\n        liveMode: false\n      });\n      this.endTimeChangeHandler(moment());\n    }\n  };\n\n  intervalHandler = async () => {\n    await this.updateMetrics();\n    if (this.state.liveMode) {\n      this.timeout = setTimeout(this.intervalHandler, config.refreshInterval);\n    }\n  };\n\n  getDataHandler = async (lastCursor, retval, dataset, handler) => {\n    let req = queryBuilder(\n      this.state.liveMode,\n      this.state.startTime,\n      this.state.endTime,\n      dataset\n    );\n\n    if (lastCursor !== null) req.query.startCursor = lastCursor;\n\n    let response = await fetch(\n      config.datastore.getQueryUrl(),\n      config.datastore.generatePayload(this.props.token, JSON.stringify(req))\n    );\n\n    let json = await response.json();\n\n    try {\n      if (\"entityResults\" in json.batch) {\n        json.batch.entityResults.forEach(d => {\n          handler(retval, d);\n        });\n      }\n\n      // There are still results remaining\n      if (json.batch.moreResults === \"NOT_FINISHED\") {\n        return await this.getDataHandler(\n          json.batch.endCursor,\n          retval,\n          dataset,\n          handler\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    return retval;\n  };\n\n  getData = async () => {\n    let newData = {};\n\n    for (let dataset of config.datastore.datasets[this.state.car]) {\n      let data = await this.getDataHandler(\n        null,\n        [],\n        dataset.id,\n        dataset.handler\n      );\n      newData[dataset.id] = dataset.parser(dataset.label, dataset.id, data);\n    }\n\n    return newData;\n  };\n\n  updateMetrics = async () => {\n    this.setState({\n      updating: true\n    });\n\n    let newData = await this.getData();\n\n    this.setState({\n      updating: false,\n      data: newData\n    });\n  };\n\n  changeCar = e => {\n    if (e.target.id !== this.state.car) {\n      this.setState({\n      car: e.target.id,\n        data: {}\n      });\n    }\n  };\n\n  populateCars = () => {\n    let ret = [];\n    for (let car in config.datastore.datasets) {\n      ret.push(\n        <a\n          className=\"dropdown-item\"\n          id={car}\n          key={car}\n          onClick={this.changeCar}\n        >\n          {car}\n        </a>\n      );\n    }\n    return ret;\n  };\n\n  render = () => {\n    return (\n      <div>\n        <div className=\"container notification control\">\n          <div className=\"columns\">\n            <div className=\"column is-narrow\">\n              <DayRange\n                startTime={this.state.startTime}\n                endTime={this.state.endTime}\n                onChangeStart={this.startTimeChangeHandler}\n                onChangeEnd={this.endTimeChangeHandler}\n              />\n            </div>\n            <div className=\"column\">\n              <div className=\"columns is-mobile is-vcentered is-multiline\">\n                <div className=\"toggle column is-narrow\">\n                  <Toggle\n                    defaultChecked={this.state.liveMode}\n                    onChange={this.liveUpdateHandler}\n                  />\n                </div>\n                <div className=\"column is-narrow\">\n                  <div\n                    className={\n                      \"dropdown\" +\n                      (this.state.dropdownOpen ? \" is-active\" : \"\")\n                    }\n                  >\n                    <div\n                      className=\"dropdown-trigger\"\n                      onClick={() => {\n                        this.setDropdownState(!this.state.dropdownOpen);\n                      }}\n                    >\n                      <button className=\"button\" controls=\"dropdown-menu\">\n                        <span>{this.state.car}</span>\n                        <span className=\"icon is-small\">\n                          <i className=\"fas fa-angle-down\"></i>\n                        </span>\n                      </button>\n                    </div>\n                    <div\n                      className=\"dropdown-menu\"\n                      id=\"dropdown-menu\"\n                      role=\"menu\"\n                    >\n                      <div className=\"dropdown-content\">\n                        {this.populateCars()}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"column is-narrow\">\n                  <Button\n                    liveMode={this.state.liveMode}\n                    getDataHandler={this.updateMetrics}\n                    updating={this.state.updating}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"columns is-desktop is-multiline\">\n            {config.datastore.datasets[this.state.car].map((dataset, index) => {\n              return dataset.element(this.state.data[dataset.id]);\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n","import config from \"./config/config.js\";\nimport GoogleLogin from \"react-google-login\";\nimport Container from \"./components/Container.js\";\nimport React from \"react\";\nimport \"./css/index.css\";\nimport \"bulma/css/bulma.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      infoOn: true,\n      loggedOn: false,\n      token: undefined\n    };\n  }\n\n  oauthSuccess = response => {\n    this.setState({\n      loggedOn: true,\n      token: response.accessToken\n    });\n  };\n\n  oauthFailure = response => {\n    console.log(response, \"Oauth Failed.\");\n  };\n\n  infoHide = () => {\n    this.setState({\n      infoOn: false\n    });\n  };\n\n  render = () => {\n    const headerInfo = (\n      <div className=\"container\">\n        <div className=\"notification is-info\">\n          Welcome! If it's your first time here, the toggle sets whether the\n          data is updated live. Otherwise, you can grab specific data by\n          selecting your time range, then pressing \"Update\". You may encounter\n          errors if you're not authorized to access the datastore. You can close\n          this message on the top right.\n          <button onClick={this.infoHide} className=\"delete\"></button>\n        </div>\n      </div>\n    );\n\n    const headerLogin = (\n      <div className=\"container notification is-link floater\">\n        To get started, log in to generate an OAuth token.\n      </div>\n    );\n\n    return this.state.loggedOn ? (\n      <div>\n        {this.state.infoOn ? headerInfo : undefined}\n        <Container token={this.state.token} />\n      </div>\n    ) : (\n      <div>\n        {headerLogin}\n        <div className=\"login\">\n          <GoogleLogin\n            clientId={config.oauth.clientId}\n            scope=\"profile email https://www.googleapis.com/auth/datastore\"\n            buttonText=\"Login\"\n            onSuccess={this.oauthSuccess}\n            onFailure={this.oauthFailure}\n          />\n        </div>\n      </div>\n    );\n  };\n}\n","import App from \"./App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}