{"version":3,"sources":["helpers/builders.js","components/Graph.js","components/MapContainer.js","config/config.js","config/datasets.js","components/CustomButton.js","components/DayRange.js","components/AppContainer.js","App.js","index.js"],"names":["chartBuilder","label","id","data","datasets","spanGaps","showLine","yAxisID","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Graph","render","props","options","React","Component","MapContainer","clearFeature","feature","features","getSource","getFeatures","forEach","feat","removeFeature","formatCoordinate","coord","proj","lng","lat","componentDidMount","map","ol","view","center","config","defaults","zoom","layers","layer","source","controls","control","extend","target","setState","loaded","bootstrapOverlay","shouldComponentUpdate","nextProps","nextState","state","length","JSON","stringify","componentWillUnmount","overlay","element","document","getElementById","autoPan","autoPanAnimation","duration","addOverlay","on","e","hasFeatureAtPixel","pixel","getFeaturesAtPixel","get","innerHTML","moment","format","setPosition","coordinate","undefined","centerMap","getView","setCenter","drawLineOnMap","lines","geometry","geom","name","setStyle","style","stroke","width","addLayer","drawMarkersOnMap","markers","push","timestamp","classes","Box","className","popup","withStyles","height","border","borderRadius","datastore","projectId","getQueryUrl","this","generatePayload","token","body","method","headers","Authorization","Accept","Urban","handler","retval","d","retVals","entity","properties","stringValue","split","elem","y","parseFloat","x","recorded_at","unix","NaN","parser","key","animation","scales","xAxes","gridLines","display","type","distribution","scaleLabel","labelString","yAxes","position","NMEASeq","parseInt","Proto","indexOf","oauth","clientId","refreshInterval","CustomButton","Button","button","variant","color","disabled","updating","liveMode","onClick","getDataHandler","DayRange","utils","MomentUtils","Grid","container","spacing","alignItems","justify","item","xs","sm","DateTimePicker","fullWidth","onChange","onChangeStart","value","startTime","onChangeEnd","endTime","emptyLabel","AppContainer","startTimeChangeHandler","time","endTimeChangeHandler","liveUpdateHandler","checked","intervalHandler","clearTimeout","timeout","a","async","updateMetrics","setTimeout","lastCursor","datasetId","req","query","filter","compositeFilter","filters","propertyFilter","op","property","toISOString","kind","projection","startCursor","fetch","response","json","batch","entityResults","moreResults","endCursor","console","log","getData","newData","car","dataset","includes","changeCar","populateCars","ret","MenuItem","modifyDatasets","slice","getCarProperties","FormControlLabel","Checkbox","Typography","Container","ExpansionPanel","ExpansionPanelSummary","expandIcon","FormControl","stopPropagation","onFocus","InputLabel","Select","select","Switch","ExpansionPanelDetails","index","Paper","dropdownOpen","theme","minWidth","padding","App","oauthSuccess","loggedOn","accessToken","oauthFailure","CssBaseline","maxWidth","root","scope","buttonText","onSuccess","onFailure","paddingTop","ReactDOM"],"mappings":"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","file":"static/js/main.2eda2012.chunk.js","sourcesContent":["export const chartBuilder = (label, id, data) => {\n  return {\n    datasets: [\n      {\n        spanGaps: false,\n        showLine: true,\n        label: label,\n        yAxisID: id,\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: data\n      }\n    ]\n  };\n};\n\nexport const queryBuilder = (liveMode, startTime, endTime, id) => {\n  return liveMode\n    ? {\n        query: {\n          filter: {\n            compositeFilter: {\n              filters: [\n                {\n                  propertyFilter: {\n                    op: \"GREATER_THAN_OR_EQUAL\",\n                    property: {\n                      name: \"recorded_at\"\n                    },\n                    value: {\n                      stringValue: startTime.toISOString()\n                    }\n                  }\n                },\n                {\n                  propertyFilter: {\n                    op: \"EQUAL\",\n                    property: {\n                      name: \"event\"\n                    },\n                    value: {\n                      stringValue: id\n                    }\n                  }\n                }\n              ],\n              op: \"AND\"\n            }\n          },\n          kind: [\n            {\n              name: \"ParticleEvent\"\n            }\n          ],\n          projection: [\n            {\n              property: {\n                name: \"data\"\n              }\n            },\n            {\n              property: {\n                name: \"recorded_at\"\n              }\n            }\n          ]\n        }\n      }\n    : {\n        query: {\n          filter: {\n            compositeFilter: {\n              filters: [\n                {\n                  propertyFilter: {\n                    op: \"GREATER_THAN_OR_EQUAL\",\n                    property: {\n                      name: \"recorded_at\"\n                    },\n                    value: {\n                      stringValue: startTime.toISOString()\n                    }\n                  }\n                },\n                {\n                  propertyFilter: {\n                    op: \"LESS_THAN_OR_EQUAL\",\n                    property: {\n                      name: \"recorded_at\"\n                    },\n                    value: {\n                      stringValue: endTime.toISOString()\n                    }\n                  }\n                },\n                {\n                  propertyFilter: {\n                    op: \"EQUAL\",\n                    property: {\n                      name: \"event\"\n                    },\n                    value: {\n                      stringValue: id\n                    }\n                  }\n                }\n              ],\n              op: \"AND\"\n            }\n          },\n          kind: [\n            {\n              name: \"ParticleEvent\"\n            }\n          ],\n          projection: [\n            {\n              property: {\n                name: \"data\"\n              }\n            },\n            {\n              property: {\n                name: \"recorded_at\"\n              }\n            }\n          ]\n        }\n      };\n};\n","import { Scatter } from \"react-chartjs-2\";\nimport React, { Fragment } from \"react\";\n\n/**\n * Component that holds our graph object.\n */\nexport default class Graph extends React.Component {\n  render = () => {\n    return (\n      <Fragment>\n        <Scatter data={this.props.data} options={this.props.options} />\n      </Fragment>\n    );\n  };\n}\n","import React from \"react\";\nimport config from \"../config/config.js\";\nimport moment from \"moment\";\nimport { withStyles, Box } from \"@material-ui/core\";\n\nimport \"ol/ol.css\";\nimport * as ol from \"ol\";\nimport * as layer from \"ol/layer\";\nimport * as proj from \"ol/proj\";\nimport * as geom from \"ol/geom\";\nimport * as style from \"ol/style\";\nimport * as source from \"ol/source\";\nimport * as control from \"ol/control\";\n\nconst customStyle = {\n  map: {\n    height: \"80vh\"\n  },\n  popup: {\n    backgroundColor: \"white\",\n    border: \"1px solid white\",\n    borderRadius: \"8px\"\n  }\n};\n\n/**\n * Component that holds our map.\n */\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.features = {};\n    this.state = {\n      map: null,\n      loaded: false\n    };\n  }\n\n  clearFeature = feature => {\n    if (this.features[feature]) {\n      this.features[feature]\n        .getSource()\n        .getFeatures()\n        .forEach(feat => this.features[feature].getSource().removeFeature(feat));\n    }\n  };\n\n  formatCoordinate = coord => {\n    return proj.fromLonLat([coord.lng, coord.lat]);\n  };\n\n  componentDidMount = () => {\n    let map = new ol.Map({\n      view: new ol.View({\n        center: this.formatCoordinate(config.map.defaults.center),\n        zoom: config.map.defaults.zoom\n      }),\n      layers: [\n        new layer.Tile({\n          source: new source.OSM()\n        })\n      ],\n      controls: control\n        .defaults()\n        .extend([new control.FullScreen(), new control.ScaleLine()]),\n      target: \"map\"\n    });\n\n    this.setState(\n      {\n        map: map,\n        loaded: true\n      },\n      this.bootstrapOverlay\n    );\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (!this.props.data) {\n      return true;\n    }\n    if (this.state.loaded !== nextState.loaded) {\n      return true;\n    }\n    if (nextProps.data && this.props.data.length === nextProps.data.length) {\n      if (JSON.stringify(this.props.data) === JSON.stringify(nextProps.data)) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  };\n\n  componentWillUnmount = () => {\n    this.features = {};\n    this.setState({\n      map: null,\n      loaded: false\n    });\n  };\n\n  bootstrapOverlay = () => {\n    this.features.overlay = new ol.Overlay({\n      element: document.getElementById(\"popup\"),\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250\n      }\n    });\n    this.state.map.addOverlay(this.features.overlay);\n\n    this.state.map.on(\"pointermove\", e => {\n      if (this.state.map.hasFeatureAtPixel(e.pixel) === true) {\n        let features = this.state.map.getFeaturesAtPixel(e.pixel);\n        if (features.length < 5) {\n          features.forEach(feature => {\n            if (feature.get(\"name\") === \"point\") {\n              document.getElementById(\"popup-content\").innerHTML = `<b>${moment(\n                feature.get(\"timestamp\")\n              ).format(\"HH:mm:ss A\")}</b>`;\n              this.features.overlay.setPosition(e.coordinate);\n            }\n          });\n        }\n      } else {\n        this.features.overlay.setPosition(undefined);\n      }\n    });\n  };\n\n  centerMap = () => {\n    if (this.props.data && this.props.data.length > 0) {\n      this.state.map\n        .getView()\n        .setCenter(\n          this.formatCoordinate(this.props.data[this.props.data.length - 1])\n        );\n    }\n  };\n\n  drawLineOnMap = () => {\n    if (this.props.data && this.props.data.length > 0) {\n      if (this.features.lines) {\n        this.clearFeature(\"lines\");\n      }\n      let feature = new ol.Feature({\n        geometry: new geom.LineString(\n          this.props.data.map(e => this.formatCoordinate(e))\n        ),\n        name: \"lines\"\n      });\n      this.features.lines = new layer.Vector({\n        source: new source.Vector({\n          features: [feature]\n        })\n      });\n      feature.setStyle(\n        new style.Style({ stroke: new style.Stroke({ width: 4 }) })\n      );\n      this.state.map.addLayer(this.features.lines);\n    } else {\n      // Clear the map property from the line\n      this.clearFeature(\"lines\");\n    }\n  };\n\n  drawMarkersOnMap = () => {\n    if (this.props.data && this.props.data.length > 0) {\n      if (this.features.markers) {\n        this.clearFeature(\"markers\");\n      }\n      let features = [];\n      this.props.data.forEach(e => {\n        features.push(\n          new ol.Feature({\n            geometry: new geom.Point(this.formatCoordinate(e)),\n            name: \"point\",\n            timestamp: e.timestamp\n          })\n        );\n      });\n\n      this.features.markers = new layer.Vector({\n        source: new source.Vector({\n          features\n        })\n      });\n\n      this.state.map.addLayer(this.features.markers);\n    } else {\n      this.clearFeature(\"markers\");\n    }\n  };\n\n  render = () => {\n    const { classes } = this.props;\n\n    if (this.state.loaded) {\n      this.drawLineOnMap();\n      this.drawMarkersOnMap();\n      this.centerMap();\n    }\n    return (\n      <Box id=\"map\" className={classes.map}>\n        <div id=\"popup\" className={classes.popup}>\n          <div id=\"popup-content\"></div>\n        </div>\n      </Box>\n    );\n  };\n}\n\nexport default withStyles(customStyle)(MapContainer);\n","import datasets from \"./datasets.js\";\n\nlet config = {\n  datastore: {\n    // https://cloud.google.com/datastore/docs/reference/data/rest/v1/projects/runQuery\n    projectId: \"supermileage-telemetry-266511\",\n    getQueryUrl: function() {\n      return (\n        \"https://datastore.googleapis.com/v1/projects/\" +\n        this.projectId +\n        \":runQuery?alt=json\"\n      );\n    },\n    generatePayload: (token, body) => {\n      return {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + token,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      };\n    },\n    datasets: datasets\n  },\n  oauth: {\n    clientId:\n      \"929098184548-qq0n3oj40b7s2qbk8nmjm9cn5c6bs15l.apps.googleusercontent.com\"\n  },\n  map: {\n    defaults: {\n      // Vancouver\n      center: { lat: 49.267941, lng: -123.24736 },\n      zoom: 12\n    }\n  },\n  refreshInterval: 5000\n};\n\nexport default config;","import moment from \"moment\";\nimport { chartBuilder } from \"../helpers/builders.js\";\nimport React from \"react\";\nimport Graph from \"../components/Graph.js\";\nimport MapContainer from \"../components/MapContainer.js\";\n\nlet datasets = {\n  Urban: [\n    {\n      label: \"Temperature\",\n      id: \"Temperature\",\n      handler: function(retval, d) {\n        let retVals = d.entity.properties.data.stringValue.split(\" \");\n        let elem = {};\n        elem.y = parseFloat(retVals[0]);\n        elem.x = moment(d.entity.properties.recorded_at.stringValue);\n\n        // Check if the last element was greater than 10 minutes ago, we disjoint it then\n        if (\n          retval.length > 0 &&\n          elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\n        ) {\n          retval.push({\n            y: NaN,\n            x: elem.x\n          });\n        }\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return chartBuilder(label, id, data);\n      },\n      element: function(data) {\n        return <Graph key={this.id} data={data || {}} options={this.options} />;\n      },\n      options: {\n        animation: {\n          duration: 500\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false\n              },\n              type: \"time\",\n              distribution: \"linear\", // Distances can vary, based on time\n              scaleLabel: {\n                display: true,\n                labelString: \"Time\"\n              }\n            }\n          ],\n          yAxes: [\n            {\n              id: \"Temperature\",\n              position: \"left\",\n              gridLines: {\n                display: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Temperature (C)\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      label: \"Power\",\n      id: \"Power\",\n      handler: function(retval, d) {\n        let elem = {};\n        elem.y = parseFloat(d.entity.properties.data.stringValue);\n        elem.x = moment(d.entity.properties.recorded_at.stringValue);\n\n        // Check if the last element was greater than 10 minutes ago, we disjoint it then\n        if (\n          retval.length > 0 &&\n          elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\n        ) {\n          retval.push({\n            y: NaN,\n            x: elem.x\n          });\n        }\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return chartBuilder(label, id, data);\n      },\n      element: function(data) {\n        return <Graph key={this.id} data={data || {}} options={this.options} />;\n      },\n      options: {\n        animation: {\n          duration: 500\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false\n              },\n              type: \"time\",\n              distribution: \"linear\", // Distances can vary, based on time\n              scaleLabel: {\n                display: true,\n                labelString: \"Time\"\n              }\n            }\n          ],\n          yAxes: [\n            {\n              id: \"Power\",\n              position: \"left\",\n              gridLines: {\n                display: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"State of Charge (%)\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      label: \"Location\",\n      id: \"Location\",\n      handler: function(retval, d) {\n        let NMEASeq = d.entity.properties.data.stringValue.split(\",\");\n        let lat =\n          parseInt(parseInt(NMEASeq[3]) / 100) +\n          parseFloat(parseFloat(NMEASeq[3]) % 100) / 60;\n        let lng =\n          parseInt(parseInt(NMEASeq[5]) / 100) +\n          parseFloat(parseFloat(NMEASeq[5]) % 100) / 60;\n        lat = NMEASeq[4] === \"S\" ? -lat : lat;\n        lng = NMEASeq[6] === \"W\" ? -lng : lng;\n        let elem = { lat, lng };\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return data;\n      },\n      element: function(data) {\n        return <MapContainer key={this.id} data={data || []} />;\n      }\n    }\n  ],\n  Proto: [\n    {\n      label: \"Speed\",\n      id: \"PROTO-Speed\",\n      handler: function(retval, d) {\n        let data = d.entity.properties.data.stringValue.split(\",\");\n\n        let elem = {};\n        elem.y = parseFloat(data[data.indexOf(\"K\") - 1]);\n        elem.x = moment(d.entity.properties.recorded_at.stringValue);\n\n        // Check if the last element was greater than 10 minutes ago, we disjoint it then\n        if (\n          retval.length > 0 &&\n          elem.x.unix() - moment(retval[retval.length - 1].x).unix() > 600\n        ) {\n          retval.push({\n            y: NaN,\n            x: elem.x\n          });\n        }\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return chartBuilder(label, id, data);\n      },\n      element: function(data) {\n        return <Graph key={this.id} data={data || {}} options={this.options} />;\n      },\n      options: {\n        animation: {\n          duration: 500\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false\n              },\n              type: \"time\",\n              distribution: \"linear\", // Distances can vary, based on time\n              scaleLabel: {\n                display: true,\n                labelString: \"Time\"\n              }\n            }\n          ],\n          yAxes: [\n            {\n              id: \"PROTO-Speed\",\n              position: \"left\",\n              gridLines: {\n                display: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"km/h\"\n              }\n            }\n          ]\n        }\n      }\n    },\n    {\n      label: \"Location\",\n      id: \"PROTO-Location\",\n      handler: function(retval, d) {\n        let NMEASeq = d.entity.properties.data.stringValue.split(\",\");\n        let lat =\n          parseInt(parseInt(NMEASeq[3]) / 100) +\n          parseFloat(parseFloat(NMEASeq[3]) % 100) / 60;\n        let lng =\n          parseInt(parseInt(NMEASeq[5]) / 100) +\n          parseFloat(parseFloat(NMEASeq[5]) % 100) / 60;\n        lat = NMEASeq[4] === \"S\" ? -lat : lat;\n        lng = NMEASeq[6] === \"W\" ? -lng : lng;\n        let timestamp = d.entity.properties.recorded_at.stringValue;\n        let elem = { lat, lng, timestamp };\n        retval.push(elem);\n      },\n      parser: function(label, id, data) {\n        return data;\n      },\n      element: function(data) {\n        return <MapContainer key={this.id} data={data || []} />;\n      }\n    }\n  ]\n};\n\nexport default datasets;\n","import React from \"react\";\nimport { Button, withStyles } from \"@material-ui/core\";\n\nconst customStyle = { button: { width: 80 } };\n\nclass CustomButton extends React.Component {\n  render = () => {\n    const { classes } = this.props;\n    return (\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={this.props.updating || this.props.liveMode}\n        onClick={this.props.getDataHandler}\n      >\n        {this.props.liveMode ? \"Live\" : \"Update\"}\n      </Button>\n    );\n  };\n}\n\nexport default withStyles(customStyle)(CustomButton);\n","import React from \"react\";\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Grid } from \"@material-ui/core\";\nimport MomentUtils from \"@date-io/moment\";\n\nexport default class DayRange extends React.Component {\n  // Render my pickers; all the state is lifted up into\n  // the parent element, thus all the changes are handled\n  // by props; this element does not have state\n  render = () => {\n    return (\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} sm={6}>\n            <DateTimePicker\n              fullWidth\n              label=\"Start time\"\n              format=\"MMM D, hh:mm a\"\n              onChange={this.props.onChangeStart}\n              value={this.props.startTime}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <DateTimePicker\n              fullWidth\n              label=\"End time\"\n              format=\"MMM D, hh:mm a\"\n              onChange={this.props.onChangeEnd}\n              value={this.props.endTime}\n              emptyLabel=\"current\"\n              disabled={this.props.endTime === null}\n            />\n          </Grid>\n        </Grid>\n      </MuiPickersUtilsProvider>\n    );\n  };\n}\n","import React, { Fragment } from \"react\";\nimport CustomButton from \"./CustomButton.js\";\nimport moment from \"moment\";\nimport config from \"../config/config.js\";\nimport { queryBuilder } from \"../helpers/builders.js\";\nimport DayRange from \"./DayRange.js\";\nimport {\n  Container,\n  Paper,\n  Grid,\n  Switch,\n  MenuItem,\n  Select,\n  withStyles,\n  InputLabel,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst customStyle = theme => ({\n  select: {\n    minWidth: 120\n  },\n  container: {\n    padding: theme.spacing(2)\n  }\n});\n\nclass AppContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startTime: moment(),\n      endTime: moment(),\n      liveMode: false,\n      updating: false,\n      dropdownOpen: false,\n      datasets: [],\n      data: {},\n      car: undefined\n    };\n  }\n\n  // Handler functions for our starttime change, which\n  // our dayrange will receieve as a prop\n  startTimeChangeHandler = time => {\n    this.setState({\n      startTime: time\n    });\n  };\n\n  endTimeChangeHandler = time => {\n    this.setState({\n      endTime: time\n    });\n  };\n\n  // Handle the current boolean for \"live\" plotting\n  liveUpdateHandler = e => {\n    if (e.target.checked) {\n      this.setState({\n        liveMode: true,\n        endTime: null\n      });\n      this.intervalHandler();\n    } else {\n      clearTimeout(this.timeout);\n      this.setState({\n        liveMode: false\n      });\n      this.endTimeChangeHandler(moment());\n    }\n  };\n\n  intervalHandler = async () => {\n    await this.updateMetrics();\n    if (this.state.liveMode) {\n      this.timeout = setTimeout(this.intervalHandler, config.refreshInterval);\n    }\n  };\n\n  getDataHandler = async (lastCursor, retval, datasetId, handler) => {\n    let req = queryBuilder(\n      this.state.liveMode,\n      this.state.startTime,\n      this.state.endTime,\n      datasetId\n    );\n\n    if (lastCursor !== null) req.query.startCursor = lastCursor;\n\n    let response = await fetch(\n      config.datastore.getQueryUrl(),\n      config.datastore.generatePayload(this.props.token, JSON.stringify(req))\n    );\n\n    let json = await response.json();\n\n    try {\n      if (\"entityResults\" in json.batch) {\n        json.batch.entityResults.forEach(d => {\n          handler(retval, d);\n        });\n      }\n\n      // There are still results remaining\n      if (json.batch.moreResults === \"NOT_FINISHED\") {\n        return await this.getDataHandler(\n          json.batch.endCursor,\n          retval,\n          datasetId,\n          handler\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    return retval;\n  };\n\n  getData = async () => {\n    let newData = {};\n\n    if (this.state.car) {\n      for (let dataset of config.datastore.datasets[this.state.car]) {\n        if (this.state.datasets.includes(dataset.label)) {\n          let data = await this.getDataHandler(\n            null,\n            [],\n            dataset.id,\n            dataset.handler\n          );\n          newData[dataset.id] = dataset.parser(dataset.label, dataset.id, data);\n        }\n      }\n    }\n\n    return newData;\n  };\n\n  updateMetrics = async () => {\n    this.setState({\n      updating: true\n    });\n\n    let newData = await this.getData();\n\n    this.setState({\n      updating: false,\n      data: newData\n    });\n  };\n\n  changeCar = e => {\n    if (e.target.value !== this.state.car) {\n      this.setState({\n        car: e.target.value,\n        data: {},\n        datasets: config.datastore.datasets[e.target.value].map(\n          data => data.label\n        )\n      });\n    }\n  };\n\n  populateCars = () => {\n    let ret = [];\n    for (let car in config.datastore.datasets) {\n      ret.push(\n        <MenuItem value={car} key={car}>\n          {car}\n        </MenuItem>\n      );\n    }\n    return ret;\n  };\n\n  modifyDatasets = e => {\n    if (e.target.checked) {\n      this.state.datasets.push(e.target.value);\n      this.setState({\n        datasets: this.state.datasets.slice()\n      });\n    } else {\n      this.setState({\n        datasets: this.state.datasets.filter(value => value !== e.target.value)\n      });\n    }\n  };\n\n  getCarProperties = () => {\n    return this.state.car ? (\n      config.datastore.datasets[this.state.car].map(data => {\n        return (\n          <Grid item key={data.label}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  onChange={this.modifyDatasets}\n                  value={data.label}\n                  checked={this.state.datasets.includes(data.label)}\n                ></Checkbox>\n              }\n              label={data.label}\n            ></FormControlLabel>\n          </Grid>\n        );\n      })\n    ) : (\n      <Typography>You have to select a car first!</Typography>\n    );\n  };\n\n  render = () => {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <Container className={classes.container}>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <FormControl\n                onClick={e => e.stopPropagation()}\n                onFocus={e => e.stopPropagation()}\n              >\n                <Grid\n                  container\n                  spacing={1}\n                  alignItems=\"center\"\n                  justify=\"flex-start\"\n                >\n                  <Grid item>\n                    <DayRange\n                      startTime={this.state.startTime}\n                      endTime={this.state.endTime}\n                      onChangeStart={this.startTimeChangeHandler}\n                      onChangeEnd={this.endTimeChangeHandler}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Grid\n                      container\n                      spacing={1}\n                      alignItems=\"center\"\n                      justify=\"flex-start\"\n                    >\n                      <Grid item xs={12} sm=\"auto\">\n                        <FormControl>\n                          <InputLabel>Car</InputLabel>\n                          <Select\n                            className={classes.select}\n                            label=\"Car\"\n                            value={this.state.car || \"\"}\n                            onChange={this.changeCar}\n                          >\n                            {this.populateCars()}\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs=\"auto\" sm=\"auto\">\n                        <Switch\n                          checked={this.state.liveMode}\n                          onChange={this.liveUpdateHandler}\n                        />\n                      </Grid>\n                      <Grid item xs=\"auto\" sm=\"auto\">\n                        <CustomButton\n                          liveMode={this.state.liveMode}\n                          getDataHandler={this.updateMetrics}\n                          updating={this.state.updating}\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </FormControl>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\n                {this.getCarProperties()}\n              </Grid>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </Container>\n\n        <Container className={classes.container}>\n          <Grid container spacing={2}>\n            {this.state.car\n              ? config.datastore.datasets[this.state.car]\n                  .filter(data => this.state.datasets.includes(data.label))\n                  .map((dataset, index) => {\n                    return (\n                      <Grid item xs={12} key={index}>\n                        <Paper>\n                          {dataset.element(this.state.data[dataset.id])}\n                        </Paper>\n                      </Grid>\n                    );\n                  })\n              : undefined}\n          </Grid>\n        </Container>\n      </Fragment>\n    );\n  };\n}\n\nexport default withStyles(customStyle)(AppContainer);\n","import config from \"./config/config.js\";\nimport GoogleLogin from \"react-google-login\";\nimport AppContainer from \"./components/AppContainer.js\";\nimport React from \"react\";\nimport {\n  CssBaseline,\n  Container,\n  Grid,\n  withStyles\n} from \"@material-ui/core\";\n\nconst customStyle = {\n  root: {\n    paddingTop: 200\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedOn: false,\n      token: undefined\n    };\n  }\n\n  oauthSuccess = response => {\n    this.setState({\n      loggedOn: true,\n      token: response.accessToken\n    });\n  };\n\n  oauthFailure = response => {\n    console.log(response, \"Oauth Failed.\");\n  };\n\n  render = () => {\n    const { classes } = this.props;\n    return (\n      <CssBaseline>\n        {this.state.loggedOn ? (\n          <AppContainer token={this.state.token} />\n        ) : (\n          <Container maxWidth=\"xs\" className={classes.root}>\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n              <Grid container justify=\"center\">\n                <Grid item>\n                  <GoogleLogin\n                    clientId={config.oauth.clientId}\n                    scope=\"profile email https://www.googleapis.com/auth/datastore\"\n                    buttonText=\"Login\"\n                    onSuccess={this.oauthSuccess}\n                    onFailure={this.oauthFailure}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Container>\n        )}\n      </CssBaseline>\n    );\n  };\n}\n\nexport default withStyles(customStyle)(App);\n","import App from \"./App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}